[{"path":[]},{"path":"https://weecology.github.io/portalcasting/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://weecology.github.io/portalcasting/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://weecology.github.io/portalcasting/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://weecology.github.io/portalcasting/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://weecology.github.io/portalcasting/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team ethan@weecology.org. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://weecology.github.io/portalcasting/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html","code":""},{"path":"https://weecology.github.io/portalcasting/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Guidelines for Contributing","title":"Guidelines for Contributing","text":"Thanks checking project! haven’t already, please check getting stated general info setting project.","code":""},{"path":"https://weecology.github.io/portalcasting/CONTRIBUTING.html","id":"contributor-code-of-conduct","dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Guidelines for Contributing","text":"contributors expected follow code conduct.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/CONTRIBUTING.html","id":"for-the-general-public","dir":"","previous_headings":"Workflow","what":"For the General Public","title":"Guidelines for Contributing","text":"’re member Weecology lab, ask use one following two methods contributing: Create issue – spot typos, bugs, general suggestions, etc. can also use participate ongoing discussions. info, please check Github guide. Fork weecology/portalcasting clone copy. Use branch add contributions create pull request – suggested bugfixes changes. info, please check Github guide. ask follow guidelines documentation testing. use R package devtools install, build, test changes repository:","code":"install.packages(\"devtools\") install.packages(\".\", repos = NULL, type=\"source\", quiet = FALSE, verbose = TRUE) library(portalcasting)"},{"path":"https://weecology.github.io/portalcasting/CONTRIBUTING.html","id":"weecologists","dir":"","previous_headings":"Workflow","what":"Weecologists","title":"Guidelines for Contributing","text":"’re actively working repo, write access create branches new features bugfixes. Please see lab-wiki info using branches shared repository. don’t write access like , please contact @gmyenni access.","code":""},{"path":"https://weecology.github.io/portalcasting/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Guidelines for Contributing","text":"contributing code project, generally don’t need additional packages, since documentation written comments R scripts. also building package, see section details. cases, ’ll creating new function documenting . can check existing functions examples, ’s basic template: Note can also include links functions, math formatting, . details, see chapter documentation Hadley Wickham’s book R packages.","code":"#' @title {this is the heading for the help file} #' #' @description {A description of the function} #' #' @param {name of a function argument} {what the argument does} #' #' @return {what is returned from the function} #' #' @examples #' {R code that is an example use of the function} #' #' @export #' newfunc <- function() ..."},{"path":"https://weecology.github.io/portalcasting/CONTRIBUTING.html","id":"building","dir":"","previous_headings":"","what":"Building","title":"Guidelines for Contributing","text":"fully build package, including documentation, running-tests, need roxygen2, testthat, devtools package. Specific operations done calling appropriate functions within R, working directory somewhere package folder. suggested workflow : 1. Write code, documentation, tests. 2. Run devtools::document() generate documentation files update NAMESPACE file. 3. Run devtools::install() install new version package. 4. Run devtools::test() run test scripts new version package. also prepping package whole, also want run devtools::check() /devtools::check_cran() make sure package complete. Note need --date TeX/LaTeX distribution running devtools::check() /devtools::check_cran() due rendering package manual. info, see GitHub repo devtools package.","code":""},{"path":"https://weecology.github.io/portalcasting/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"Guidelines for Contributing","text":"adding new functionality, please include automated tests verify basic functionality correct. Automated testing uses R scripts, live tests/testthat/ subfolder package. adding new file, please name test-{concept}.R. general rule, don’t need test possible inputs outputs function, test important aspects: * outputs correct format (including dimensions components) * sample input produces correct sample output can see existing tests examples organize tests, note several different kinds expect_ functions test different things. details, see chapter testing Hadley Wickham’s book R packages.","code":""},{"path":"https://weecology.github.io/portalcasting/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Guidelines for Contributing","text":"document based CONTRIBUTING file associated Beta release portalr package used MIT License.","code":""},{"path":"https://weecology.github.io/portalcasting/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2017 Weecology Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Adding a Model and Data","text":"portalcasting package provides ability add functions local copy repository testing well contribute base set models provided within package (thus executed main repository). Similarly, users may often want need analyze data slightly different configuration already available. , walk steps add user-defined models data sets directory local use integration within production pipeline. purposes , consider interested adding model named “newmod” forecasting suite. “newmod” can work existing data, really interested slightly different configuration (perhaps long-term kangaroo rat exclosures) data call “newdata”. , assume user already run basic installation, set , evaluation package, covered Getting Started vignette.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"model-requirements","dir":"Articles","previous_headings":"","what":"Model requirements","title":"Adding a Model and Data","text":"Unlike previous versions portalcasting, starting v0.9.0, formal requirements output model. requirements relaxed starting v0.51.0, now leverage model controls lists track document functionality. forecasting pipeline work basically univariate model fitting function run R, produce object capable processed forecasting function forecast model’s predictions, long can processed via process_model_output(), requires mean, lower, upper elements. vast majority information saved forecasts located metadata files controls lists, resulting model needing produce much specific output valid. Models can based either pre-existing functions (e.g., AutoArima model uses auto.arima forecasting package) specialized functions (designed runjags models portalcasting, collated fit_runjags). model-dataset-species combination run cast() wrapped tryCatch() call, softens errors implementation. cast() call runs .call implementation fit forecast functions model controls list passes output two functions process_model_output.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"set-up-the-directory","dir":"Articles","previous_headings":"","what":"Set up the directory","title":"Adding a Model and Data","text":"allow flexible environment, use setup_sandbox() function make fill directory, house \"~/sandbox\": controls list standard, prefabricated (“prefab”) models come portalcasting package automatically added directory’s models sub folder, model script files runjags models. Similarly, prefabricated data sets come portalcasting package automatically added data subdirectory.","code":"library(portalcasting) main <- \"~/sandbox\" setup_sandbox(main = main)"},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"adding-a-model","dir":"Articles","previous_headings":"","what":"Adding a model","title":"Adding a Model and Data","text":"new model added pipeline via (least) additional model controls (additional files needed). starting template model controls provided portalcasting core files accessible via model_controls_template():","code":"model_controls_template() #> $metadata #> $metadata$name #> [1] \"model_name\" #>  #> $metadata$print_name #> [1] \"model name\" #>  #> $metadata$tags #> list() #>  #> $metadata$text #> NULL #>  #>  #> $fit #> $fit$fun #> NULL #>  #> $fit$args #> NULL #>  #>  #> $forecast #> $forecast$fun #> [1] \"forecast\" #>  #> $forecast$args #> $forecast$args$object #> [1] \"model_fit\" #>  #> $forecast$args$h #> [1] \"metadata$time$lead_time_newmoons\" #>  #> $forecast$args$level #> [1] \"metadata$confidence_level\" #>  #>  #>  #> $interpolate #> $interpolate$needed #> [1] FALSE #>  #>  #> $datasets #> $datasets$all #> $datasets$all$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PL\"    \"PM\"    \"PP\"    \"RM\"    \"RO\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $datasets$controls #> $datasets$controls$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PM\"    \"PP\"    \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $datasets$exclosures #> $datasets$exclosures$species #>  [1] \"BA\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    \"PF\"    \"PM\"    \"PP\"    #> [10] \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #>  #> $response #> $response$link #> NULL #>  #> $response$type #> NULL #>  #> $response$scoring_family #> NULL #>  #>  #> $time #> [1] \"newmoon\""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"metadata","dir":"Articles","previous_headings":"Adding a model","what":"Metadata","title":"Adding a Model and Data","text":"One can create custom controls using suite new_model_<> functions, wraps call specific component model_controls_template inside update_list() call:","code":"new_model_controls() #> $metadata #> $metadata$name #> [1] \"model_name\" #>  #> $metadata$print_name #> [1] \"model name\" #>  #> $metadata$tags #> list() #>  #> $metadata$text #> NULL #>  #>  #> $fit #> $fit$fun #> NULL #>  #> $fit$args #> NULL #>  #>  #> $forecast #> $forecast$fun #> [1] \"forecast\" #>  #> $forecast$args #> $forecast$args$object #> [1] \"model_fit\" #>  #> $forecast$args$h #> [1] \"metadata$time$lead_time_newmoons\" #>  #> $forecast$args$level #> [1] \"metadata$confidence_level\" #>  #>  #>  #> $interpolate #> $interpolate$needed #> [1] FALSE #>  #>  #> $datasets #> $datasets$all #> $datasets$all$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PL\"    \"PM\"    \"PP\"    \"RM\"    \"RO\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $datasets$controls #> $datasets$controls$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PM\"    \"PP\"    \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $datasets$exclosures #> $datasets$exclosures$species #>  [1] \"BA\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    \"PF\"    \"PM\"    \"PP\"    #> [10] \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #>  #> $response #> $response$link #> NULL #>  #> $response$type #> NULL #>  #> $response$scoring_family #> NULL #>  #>  #> $time #> [1] \"newmoon\"  new_model_metadata() #> $name #> [1] \"model_name\" #>  #> $print_name #> [1] \"model name\" #>  #> $tags #> list() #>  #> $text #> NULL  new_model_metadata(name = \"newmod\") #> $name #> [1] \"newmod\" #>  #> $print_name #> [1] \"model name\" #>  #> $tags #> list() #>  #> $text #> NULL  new_model_controls(metadata = new_model_metadata(name = \"newmod\", print_name = \"New Model\")) #> $metadata #> $metadata$name #> [1] \"newmod\" #>  #> $metadata$print_name #> [1] \"New Model\" #>  #> $metadata$tags #> list() #>  #> $metadata$text #> NULL #>  #>  #> $fit #> $fit$fun #> NULL #>  #> $fit$args #> NULL #>  #>  #> $forecast #> $forecast$fun #> [1] \"forecast\" #>  #> $forecast$args #> $forecast$args$object #> [1] \"model_fit\" #>  #> $forecast$args$h #> [1] \"metadata$time$lead_time_newmoons\" #>  #> $forecast$args$level #> [1] \"metadata$confidence_level\" #>  #>  #>  #> $interpolate #> $interpolate$needed #> [1] FALSE #>  #>  #> $datasets #> $datasets$all #> $datasets$all$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PL\"    \"PM\"    \"PP\"    \"RM\"    \"RO\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $datasets$controls #> $datasets$controls$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PM\"    \"PP\"    \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $datasets$exclosures #> $datasets$exclosures$species #>  [1] \"BA\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    \"PF\"    \"PM\"    \"PP\"    #> [10] \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #>  #> $response #> $response$link #> NULL #>  #> $response$type #> NULL #>  #> $response$scoring_family #> NULL #>  #>  #> $time #> [1] \"newmoon\""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"fit-and-cast-functions","dir":"Articles","previous_headings":"Adding a model","what":"Fit and Cast Functions","title":"Adding a Model and Data","text":"least, new model need fitting function, can provided using new_model_fit(), elements function arguments: arima function already defined forecast method, need update cast element model controls, already pre-loaded:","code":"new_model_fit(fun = \"arima\", args = list(x = \"abundance\")) #> $fun #> [1] \"arima\" #>  #> $args #> $args$x #> [1] \"abundance\"  new_model_controls(metadata = new_model_metadata(name = \"newmod\", print_name = \"New Model\"),                    fit      = new_model_fit(fun = \"arima\", args = list(x = \"abundance\"))) #> $metadata #> $metadata$name #> [1] \"newmod\" #>  #> $metadata$print_name #> [1] \"New Model\" #>  #> $metadata$tags #> list() #>  #> $metadata$text #> NULL #>  #>  #> $fit #> $fit$fun #> [1] \"arima\" #>  #> $fit$args #> $fit$args$x #> [1] \"abundance\" #>  #>  #>  #> $forecast #> $forecast$fun #> [1] \"forecast\" #>  #> $forecast$args #> $forecast$args$object #> [1] \"model_fit\" #>  #> $forecast$args$h #> [1] \"metadata$time$lead_time_newmoons\" #>  #> $forecast$args$level #> [1] \"metadata$confidence_level\" #>  #>  #>  #> $interpolate #> $interpolate$needed #> [1] FALSE #>  #>  #> $datasets #> $datasets$all #> $datasets$all$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PL\"    \"PM\"    \"PP\"    \"RM\"    \"RO\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $datasets$controls #> $datasets$controls$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PM\"    \"PP\"    \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $datasets$exclosures #> $datasets$exclosures$species #>  [1] \"BA\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    \"PF\"    \"PM\"    \"PP\"    #> [10] \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #>  #> $response #> $response$link #> NULL #>  #> $response$type #> NULL #>  #> $response$scoring_family #> NULL #>  #>  #> $time #> [1] \"newmoon\" new_model_forecast() #> $fun #> [1] \"forecast\" #>  #> $args #> $args$object #> [1] \"model_fit\" #>  #> $args$h #> [1] \"metadata$time$lead_time_newmoons\" #>  #> $args$level #> [1] \"metadata$confidence_level\""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"datasets","dir":"Articles","previous_headings":"Adding a model","what":"Datasets","title":"Adding a Model and Data","text":"default, new model set run three prefab datasets (, exclosures, controls), relevant species (e.g, including kangaroo rats exclosures): specific model needs use interpolated data, new_model_interpolate() function given argument needed = TRUE, function input, allows invoking specialized functions. simple example used prefab models round_na.interp(), implemented : just added interpolate element new_model_controls. default, however, needed = FALSE:","code":"new_model_datasets() #> $all #> $all$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PL\"    \"PM\"    \"PP\"    \"RM\"    \"RO\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $controls #> $controls$species #>  [1] \"BA\"    \"DM\"    \"DO\"    \"DS\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    #> [10] \"PF\"    \"PM\"    \"PP\"    \"RM\"    \"SF\"    \"SH\"    \"total\" #>  #>  #> $exclosures #> $exclosures$species #>  [1] \"BA\"    \"NA\"    \"OL\"    \"OT\"    \"PB\"    \"PE\"    \"PF\"    \"PM\"    \"PP\"    #> [10] \"RM\"    \"SF\"    \"SH\"    \"total\" new_model_interpolate(needed = TRUE, fun = \"round_na.interp\") #> $needed #> [1] TRUE #>  #> $fun #> [1] \"round_na.interp\" new_model_interpolate() #> $needed #> [1] FALSE"},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"model-response","dir":"Articles","previous_headings":"Adding a model","what":"Model Response","title":"Adding a Model and Data","text":"response distribution model key aspect scoring properly. store information response list evaluation purposes: options component follows: link: normal, negative_binomial, poisson type: distribution, empirical scoring_family: normal, nbinom, poisson, sample","code":"new_model_controls()$response #> $link #> NULL #>  #> $type #> NULL #>  #> $scoring_family #> NULL new_model_response(link = \"normal\", type = \"distribution\", scoring_family = \"normal\") #> $link #> [1] \"normal\" #>  #> $type #> [1] \"distribution\" #>  #> $scoring_family #> [1] \"normal\""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"adding-the-model","dir":"Articles","previous_headings":"Adding a model","what":"Adding the Model","title":"Adding a Model and Data","text":"specific updates can called together generate model controls list newmod: Given directory already established, one can use add_new_model() function add model directory main, via controls list: model directly ready portalcasted:","code":"new_controls <- new_model_controls(metadata = new_model_metadata(name = \"newmod\", print_name = \"New Model\"),                                    fit      = new_model_fit(fun = \"arima\", args = list(x = \"abundance\")),                                    response = new_model_response(link = \"normal\", type = \"distribution\", scoring_family = \"normal\")) new_controls <- new_model_controls(metadata = new_model_metadata(name = \"newmod\", print_name = \"New Model\"),                                    fit      = new_model_fit(fun = \"arima\", args = list(x = \"abundance\")),                                    response = new_model_response(link = \"normal\", type = \"distribution\", scoring_family = \"normal\"))   added <- add_new_model(main = main, new_model_controls = new_controls)   names(read_models_controls(main = main))  #>  [1] \"AutoArima\"                            \"sAutoArima\"                           \"ESSS\"                                 #>  [4] \"NaiveArima\"                           \"sNaiveArima\"                          \"nbGARCH\"                              #>  [7] \"nbsGARCH\"                             \"pGARCH\"                               \"psGARCH\"                              #> [10] \"pevGARCH\"                             \"jags_RW\"                              \"jags_logistic\"                        #> [13] \"jags_logistic_covariates\"             \"jags_logistic_competition\"            \"jags_logistic_competition_covariates\" #> [16] \"newmod\" portalcast(main     = main,             models   = \"newmod\",             datasets = \"all\",             species  = c(\"DM\", \"PP\", \"total\"))  #> ------------------------------------------------------------ #> Forecasting models... #> ------------------------------------------------------------ #> This is portalcasting v0.51.0 #> ------------------------------------------------------------ #>  #>   - newmod for all DM #>     |++++| successful |++++| #>   - newmod for all PP #>     |++++| successful |++++| #>   - newmod for all total #>     |++++| successful |++++| #> ------------------------------------------------------------ #> ...forecasting complete. #> ------------------------------------------------------------"},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"from-the-setup-stage","dir":"Articles","previous_headings":"Adding a model","what":"From the setup Stage","title":"Adding a Model and Data","text":"Incorporating model establishment directory requires adding controls list initial setup_<> call:","code":"main2 <- \"~/sandbox2\" setup_sandbox(main                = main2,                new_models_controls = list(newmod = new_controls),                models              = c(prefab_models(), \"newmod\"))"},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"adding-a-dataset","dir":"Articles","previous_headings":"","what":"Adding a Dataset","title":"Adding a Model and Data","text":"new dataset added pipeline much way new model, single generating function fewer elements controls list:","code":"dataset_controls_template() #> $metadata #> $metadata$name #> [1] \"dataset_name\" #>  #> $metadata$tags #> list() #>  #> $metadata$text #> NULL #>  #>  #> $fun #> [1] \"prepare_dataset\" #>  #> $args #> $args$name #> [1] \"dataset_name\" #>  #> $args$species #>  [1] \"BA\" \"DM\" \"DO\" \"DS\" \"NA\" \"OL\" \"OT\" \"PB\" \"PE\" \"PF\" \"PH\" \"PL\" \"PM\" \"PP\" \"RF\" #> [16] \"RM\" \"RO\" \"SF\" \"SH\" \"SO\" #>  #> $args$total #> [1] TRUE #>  #> $args$clean #> [1] FALSE #>  #> $args$type #> [1] \"Rodents\" #>  #> $args$level #> [1] \"Site\" #>  #> $args$plots #> [1] \"all\" #>  #> $args$treatment #> NULL #>  #> $args$min_plots #> [1] 24 #>  #> $args$min_traps #> [1] 1 #>  #> $args$output #> [1] \"abundance\" #>  #> $args$fillweight #> [1] FALSE #>  #> $args$unknowns #> [1] FALSE #>  #> $args$time #> [1] \"newmoon\" #>  #> $args$na_drop #> [1] FALSE #>  #> $args$zero_drop #> [1] FALSE #>  #> $args$effort #> [1] TRUE #>  #> $args$filename #> [1] \"rodents_dataset_name.csv\""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"metadata-1","dir":"Articles","previous_headings":"Adding a Dataset","what":"Metadata","title":"Adding a Model and Data","text":"One can create custom controls using suite new_data_<> functions, wraps call specific component data_controls_template inside update_list() call:","code":"new_dataset_controls() #> $metadata #> $metadata$name #> [1] \"dataset_name\" #>  #> $metadata$tags #> list() #>  #> $metadata$text #> NULL #>  #>  #> $fun #> [1] \"prepare_dataset\" #>  #> $args #> $args$name #> [1] \"dataset_name\" #>  #> $args$species #>  [1] \"BA\" \"DM\" \"DO\" \"DS\" \"NA\" \"OL\" \"OT\" \"PB\" \"PE\" \"PF\" \"PH\" \"PL\" \"PM\" \"PP\" \"RF\" #> [16] \"RM\" \"RO\" \"SF\" \"SH\" \"SO\" #>  #> $args$total #> [1] TRUE #>  #> $args$clean #> [1] FALSE #>  #> $args$type #> [1] \"Rodents\" #>  #> $args$level #> [1] \"Site\" #>  #> $args$plots #> [1] \"all\" #>  #> $args$treatment #> NULL #>  #> $args$min_plots #> [1] 24 #>  #> $args$min_traps #> [1] 1 #>  #> $args$output #> [1] \"abundance\" #>  #> $args$fillweight #> [1] FALSE #>  #> $args$unknowns #> [1] FALSE #>  #> $args$time #> [1] \"newmoon\" #>  #> $args$na_drop #> [1] FALSE #>  #> $args$zero_drop #> [1] FALSE #>  #> $args$effort #> [1] TRUE #>  #> $args$filename #> [1] \"rodents_dataset_name.csv\"  new_dataset_metadata() #> $name #> [1] \"dataset_name\" #>  #> $tags #> list() #>  #> $text #> NULL  new_dataset_metadata(name = \"newdata\") #> $name #> [1] \"newdata\" #>  #> $tags #> list() #>  #> $text #> NULL  new_dataset_controls(metadata = new_dataset_metadata(name = \"newdata\")) #> $metadata #> $metadata$name #> [1] \"newdata\" #>  #> $metadata$tags #> list() #>  #> $metadata$text #> NULL #>  #>  #> $fun #> [1] \"prepare_dataset\" #>  #> $args #> $args$name #> [1] \"dataset_name\" #>  #> $args$species #>  [1] \"BA\" \"DM\" \"DO\" \"DS\" \"NA\" \"OL\" \"OT\" \"PB\" \"PE\" \"PF\" \"PH\" \"PL\" \"PM\" \"PP\" \"RF\" #> [16] \"RM\" \"RO\" \"SF\" \"SH\" \"SO\" #>  #> $args$total #> [1] TRUE #>  #> $args$clean #> [1] FALSE #>  #> $args$type #> [1] \"Rodents\" #>  #> $args$level #> [1] \"Site\" #>  #> $args$plots #> [1] \"all\" #>  #> $args$treatment #> NULL #>  #> $args$min_plots #> [1] 24 #>  #> $args$min_traps #> [1] 1 #>  #> $args$output #> [1] \"abundance\" #>  #> $args$fillweight #> [1] FALSE #>  #> $args$unknowns #> [1] FALSE #>  #> $args$time #> [1] \"newmoon\" #>  #> $args$na_drop #> [1] FALSE #>  #> $args$zero_drop #> [1] FALSE #>  #> $args$effort #> [1] TRUE #>  #> $args$filename #> [1] \"rodents_dataset_name.csv\""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"generating-function-and-its-arguments","dir":"Articles","previous_headings":"Adding a Dataset","what":"Generating Function and Its Arguments","title":"Adding a Model and Data","text":"existing datasets use generating function prepare_dataset(), quite flexible ports arguments directly generalized summarize_rodent_data() portalr package. therefore include function default new dataset controls: although can changed whatever generating function user may want implement. arguments function can updated via new_dataset_args() function:","code":"new_dataset_fun() #> [1] \"prepare_dataset\" new_dataset_args(name = \"newdata\") #> $name #> [1] \"newdata\" #>  #> $species #>  [1] \"BA\" \"DM\" \"DO\" \"DS\" \"NA\" \"OL\" \"OT\" \"PB\" \"PE\" \"PF\" \"PH\" \"PL\" \"PM\" \"PP\" \"RF\" #> [16] \"RM\" \"RO\" \"SF\" \"SH\" \"SO\" #>  #> $total #> [1] TRUE #>  #> $clean #> [1] FALSE #>  #> $type #> [1] \"Rodents\" #>  #> $level #> [1] \"Site\" #>  #> $plots #> [1] \"all\" #>  #> $treatment #> NULL #>  #> $min_plots #> [1] 24 #>  #> $min_traps #> [1] 1 #>  #> $output #> [1] \"abundance\" #>  #> $fillweight #> [1] FALSE #>  #> $unknowns #> [1] FALSE #>  #> $time #> [1] \"newmoon\" #>  #> $na_drop #> [1] FALSE #>  #> $zero_drop #> [1] FALSE #>  #> $effort #> [1] TRUE #>  #> $filename #> [1] \"rodents_dataset_name.csv\""},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"adding-the-dataset","dir":"Articles","previous_headings":"Adding a Dataset","what":"Adding the Dataset","title":"Adding a Model and Data","text":"can wrapped together call new_dataset_controls() create controls list passed add_new_dataset(): Given directory already established, one can use add_new_dataset() function add dataset controls directory main, via controls list, noting existing models new dataset added controls list: dataset can forecast :","code":"new_controls <- new_dataset_controls(metadata = new_dataset_metadata(name = \"newdata\"),                                      args     = new_dataset_args(name     = \"newdata\",                                                                   filename = \"rodents_newdata.csv\")) new_controls <- new_dataset_controls(metadata = new_dataset_metadata(name = \"newdata\"),                                      args     = new_dataset_args(name     = \"newdata\",                                                                   filename = \"rodents_newdata.csv\"))  added <- add_new_dataset(main                 = main,                           new_dataset_controls = new_controls,                           models               = \"AutoArima\"))   names(read_datasets_controls(main = main))  #>  [1] \"all\"        \"controls\"   \"exclosures\" \"newdata\" portalcast(main     = main,             models   = \"AutoArima\",             datasets = \"newdata\",             species  = c(\"DM\", \"PP\", \"total\"))  #> ------------------------------------------------------------ #> Forecasting models... #> ------------------------------------------------------------ #> This is portalcasting v0.51.0 #> ------------------------------------------------------------ #>  #>   - AutoArima for newdata DM #>     |++++| successful |++++| #>   - AutoArima for newdata PP #>     |++++| successful |++++| #>   - AutoArima for newdata total #>     |++++| successful |++++| #> ------------------------------------------------------------ #> ...forecasting complete. #> ------------------------------------------------------------"},{"path":"https://weecology.github.io/portalcasting/articles/adding_model_and_data.html","id":"from-the-setup-stage-1","dir":"Articles","previous_headings":"Adding a Dataset","what":"From the setup Stage","title":"Adding a Model and Data","text":"Incorporating dataset establishment directory requires adding controls list initial setup_<> call:","code":"main3 <- \"~/sandbox3\" setup_sandbox(main                  = main3,                new_datasets_controls = list(newdata = new_controls),                datasets              = c(prefab_datasets(), \"newdata\"))"},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"portalcasting Codebase","text":"install recent version portalcasting GitHub:","code":"install.packages(\"remotes\") remotes::install_github(\"weecology/portalcasting\")"},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"directory-structure","dir":"Articles","previous_headings":"","what":"Directory Structure","title":"portalcasting Codebase","text":"package uses directory tree two levels organize project: main: project folder encompassing content subdirectories: specific subfolders organize project files structured main argument controls location directory defaults \".\", present working location. group project subfolders multi-leveled folder, simply add structure main input, main = \"~/project_folder\".","code":"main │ └──resources │   <stable version of resources used to populate other folders> └──models │   <model controls list> │   <model scripts> └──data │   <dataset control list> │   <rodent datasets> │   <covariates, newmoons, and metadata data files> └──forecasts │   <previous and current model forecasts> │   <casts metadata file> └──fits │   <previous and current model fits> └──www │   <ui, server, and application files> └──directory_configuration.yaml └──app.R"},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"instantiating-a-directory","dir":"Articles","previous_headings":"","what":"Instantiating a Directory","title":"portalcasting Codebase","text":"Setting fully functional directory production sandbox pipeline consists two steps: creating (instantiating folders missing) filling (adding files folders). steps can executed separately combination via general setup_dir() function via specialized versions setup_dir(): setup_sandbox() (creating pipeline defaults facilitate sandboxing) setup_production() (creating production pipeline). functions general flexible, designed work well default settings. alter directory configurations setup_<> create_dir(), use settings argument, takes list inputs, condensed detailed directory_settings().","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"creating","dir":"Articles","previous_headings":"Instantiating a Directory","what":"Creating","title":"portalcasting Codebase","text":"directory established using create_dir(), takes main argument sequence creates levels’ folders already exist. typical user likely want change main input (locate forecasting directory like ), general users alter subdirectories structure, option directly available. needed, subdirectories can altered via directory_settings() controls. create_dir() also initializes directory_configuration.yaml file, held within main contains metadata directory setting process.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"filling","dir":"Articles","previous_headings":"Instantiating a Directory","what":"Filling","title":"portalcasting Codebase","text":"directory filled (loaded files forecasting) using series subdirectory-specific functions combined overall fill_dir() function: fill_resources() downloads resources directory, presently include source data (rodents), covariate data (weather, NDVI), previous forecasts’ archive. Upon completion downloads, fill_resources() updates directory_configuration.yaml downloaded versions. fill_forecasts() moves existing model forecast output files resources subdirectory forecasts subdirectory. fill_fits() moves existing model fit files resource subdirectory fits subdirectory. fill_models() writes model controls list scripts models subdirectory. prepare_newmoons() prepares formats temporal (lunar) data raw data. prepare_rodents() prepares multiple structures rodents data analyses raw data. prepare_covariates() downloads forecasts covariates data. prepare_metadata() creates saves YAML metadata list forecasting configurations. fill_app() moves app-building files directory renders components based local content. components can run individually, well. example, fill_data() can used set complete set data given model run.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"updating","dir":"Articles","previous_headings":"Instantiating a Directory","what":"Updating","title":"portalcasting Codebase","text":"directory updated (loaded date resources re-filling data) using update_dir function, provides update-flavored implementation core functions.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"running-models","dir":"Articles","previous_headings":"","what":"Running models","title":"portalcasting Codebase","text":"Models run using function pipeline similar creation filling function pipelines, flexible controls variety arguments, robust operation default settings. make_model_combinations() takes input arguments available components produces data frame model run combinations (model - dataset - species). cast() runs (“casts”) model combinations using fit cast functions described model controls list.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"data-io","dir":"Articles","previous_headings":"","what":"Data IO","title":"portalcasting Codebase","text":"portalcasting generalized read_data() function allows toggling among read_rodents(), read_rodents_dataset(), read_covariates(), read_newmoons(), read_metadata(), specific loading procedures place. Similar read_data() functions, read_forecasts() provides simple user interface reading forecast files R session. saving , write_data() provides simple means interfacing potentially pre-existing data files, logical inputs saving generally overwriting pre-existing file specifically, flexible file naming. type data saved currently restricted .csv .json, .yaml, extracted filename given. directory configuration file special file, IO functions separate rest: write_directory_configuration() creates file (within create_dir(), update_directory_configuration() adds downloads information inside fill_resources()) read_directory_configuration() brings information file R session. Reading configuration file R also means directory settings passed among functions (limit clashing arguments reduce verbosity).","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"utilities","dir":"Articles","previous_headings":"","what":"Utilities","title":"portalcasting Codebase","text":"facilitate tidy easy--follow code, introduce important utility functions, put use throughout codebase.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"rodent-data-interpolating","dir":"Articles","previous_headings":"Utilities","what":"(Rodent) data interpolating","title":"portalcasting Codebase","text":"round_na.interp() combines round, na.interp, pmax functions provide single-function interpolating biologically reasonable values.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"file-paths","dir":"Articles","previous_headings":"Utilities","what":"File paths","title":"portalcasting Codebase","text":"file_ext() determines file extension, based separating character (sep_char), facilitates use generalized URL APIs.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"messaging","dir":"Articles","previous_headings":"Utilities","what":"Messaging","title":"portalcasting Codebase","text":"messageq() provides simple wrapper message also logical input quieting. helps switch messaging desired localizing actual boolean operator code one spot. break_line() makes single horizontal breaking line, break_lines makes multiple break_lines, castle makes castle character element, use messageq.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/codebase.html","id":"time","dir":"Articles","previous_headings":"Utilities","what":"Time","title":"portalcasting Codebase","text":"foy() calculates fraction year date.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"models","dir":"Articles","previous_headings":"","what":"Models","title":"Current Models","text":"currently analyze forecast rodent data Portal using fifteen models: AutoARIMA, Seasonal AutoARIMA, ESSS, NaiveARIMA, Seasonal NaiveARIMA, nbGARCH, nbsGARCH, pGARCH, psGARCH, pevGARCH, Random Walk, Logistic, Logistic Covariates, Logistic Competition, Logistic Competition Covariates (WeecologyLab 2019).","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"autoarima","dir":"Articles","previous_headings":"Models","what":"AutoARIMA","title":"Current Models","text":"AutoARIMA (Automatic Auto-Regressive Integrated Moving Average) flexible Auto-Regressive Integrated Moving Average (ARIMA) model. ARIMA models defined according three model structure parameters – number autoregressive terms (p), degree differencing (d), order moving average (q), represented ARIMA(p, d, q) (Box Jenkins 1970). submodels fit final model selected using auto.arima function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). AutoARIMA fit flexibly, model parameters can vary fit fit. Model forecasts generated using forecast function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). auto.arima function allows seasonal models, seasonality hard-coded period sampling, case Portal rodent surveys. result, seasonal models evaluated within model set, see sAutoARIMA model. model fit using normal distribution, result can generate negative-valued predictions forecasts.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"seasonal-autoarima","dir":"Articles","previous_headings":"Models","what":"Seasonal AutoARIMA","title":"Current Models","text":"sAutoARIMA (Seasonal Automatic Auto-Regressive Integrated Moving Average) flexible Auto-Regressive Integrated Moving Average (ARIMA) model. ARIMA models defined according three model structure parameters – number autoregressive terms (p), degree differencing (d), order moving average (q), represented ARIMA(p, d, q) (Box Jenkins 1970). submodels fit final model selected using auto.arima function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). sAutoARIMA fit flexibly, model parameters can vary fit fit. Model forecasts generated using forecast function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). auto.arima function allows seasonal models, seasonality hard-coded period sampling, case Portal rodent surveys. therefore use two Fourier series terms (sin cos fraction year) external regressors achieve seasonal dynamics sAutoARIMA model. model fit using normal distribution, result can generate negative-valued predictions forecasts.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"esss","dir":"Articles","previous_headings":"Models","what":"ESSS","title":"Current Models","text":"ESSS (Exponential Smoothing State Space) flexible exponential smoothing state space model (Hyndman et al. 2008). model fit using ets function forecast package (Hyndman 2017) allow.multiplicative.trend argument set TRUE. Model forecasts generated using forecast function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). Models fit using ets implement known “innovations” approach state space modeling, assumes single source noise equivalent process observation errors (Hyndman et al. 2008). general, ESSS models defined according three model structure parameters – error type, trend type, seasonality type (Hyndman et al. 2008). parameters can N (none), (additive), M (multiplicative) state (Hyndman et al. 2008). However, difference period seasonality sampling Portal rodents combined hard-coded single period ets function, include seasonal components ESSS model. ESSS fit flexibly, model parameters can vary fit fit. model fit using normal distribution, result can generate negative-valued predictions forecasts.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"naivearima","dir":"Articles","previous_headings":"Models","what":"NaiveARIMA","title":"Current Models","text":"NaiveARIMA (Naive Auto-Regressive Integrated Moving Average) fixed Auto-Regressive Integrated Moving Average (ARIMA) model order (0,1,0). model fit using Arima function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). Model forecasts generated using forecast function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). Arima function allows seasonal models, seasonality hard-coded period sampling, case Portal rodent surveys. result, NaiveARIMA include seasonal terms, see sNaiveARIMA model. model fit using normal distribution, result can generate negative-valued predictions forecasts.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"seasonal-naivearima","dir":"Articles","previous_headings":"Models","what":"Seasonal NaiveARIMA","title":"Current Models","text":"sNaiveARIMA (Seasonal Naive Auto-Regressive Integrated Moving Average) fixed Auto-Regressive Integrated Moving Average (ARIMA) model order (0,1,0). model fit using Arima function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). Model forecasts generated using forecast function forecast package (Hyndman Athanasopoulos 2013; Hyndman 2017). Arima function allows seasonal models, seasonality hard-coded period sampling, case Portal rodent surveys. therefore use two Fourier series terms (sin cos fraction year) external regressors achieve seasonal dynamics NaiveARIMA model. model fit using normal distribution, result can generate negative-valued predictions forecasts.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"nbgarch","dir":"Articles","previous_headings":"Models","what":"nbGARCH","title":"Current Models","text":"nbGARCH (Negative Binomial Auto-Regressive Conditional Heteroskedasticity) generalized autoregressive conditional heteroskedasticity (GARCH) model overdispersion (.e., negative binomial response). model fit interpolated data using tsglm function tscount package (Liboschik et al. 2017). GARCH models generalized ARMA models defined according link function, response distribution, two model structure parameters – number autoregressive terms (p) order moving average (q), represented GARCH(p, q) (Liboschik et al. 2017). nbGARCH model fit using log link negative binomial response (modeled -dispersed Poisson), well p = 1 (first-order autoregression) q = 13 (approximately yearly moving average). tsglm function tscount package (Liboschik et al. 2017) uses (conditional) quasi-likelihood based approach inference models overdispersion additional parameter two-step approach. two-stage approach minimally evaluated, although preliminary simulation-based studies promising (Liboschik, Fokianos, Fried 2017). Forecasts made using portalcasting method function forecast.tsglm forecast.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"nbsgarch","dir":"Articles","previous_headings":"Models","what":"nbsGARCH","title":"Current Models","text":"nbsGARCH (Negative Binomial Seasonal Auto-Regressive Conditional Heteroskedasticity) generalized autoregressive conditional heteroskedasticity (GARCH) model overdispersion (.e., negative binomial response) seasonal predictors modeled using two Fourier series terms (sin cos fraction year) fit interpolated data. model fit using tsglm function tscount package (Liboschik et al. 2017). GARCH models generalized ARMA models defined according link function, response distribution, two model structure parameters – number autoregressive terms (p) order moving average (q), represented GARCH(p, q) (Liboschik et al. 2017). nbsGARCH model fit using log link negative binomial response (modeled -dispersed Poisson), well p = 1 (first-order autoregression) q = 13 (approximately yearly moving average). tsglm function tscount package (Liboschik et al. 2017) uses (conditional) quasi-likelihood based approach inference models overdispersion additional parameter two-step approach. two-stage approach minimally evaluated, although preliminary simulation-based studies promising (Liboschik, Fokianos, Fried 2017). Forecasts made using portalcasting method function forecast.tsglm forecast.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"pgarch","dir":"Articles","previous_headings":"Models","what":"pGARCH","title":"Current Models","text":"pGARCH (Poisson Auto-Regressive Conditional Heteroskedasticity) generalized autoregressive conditional heteroskedasticity (GARCH) model. model fit using tsglm function tscount package (Liboschik et al. 2017). GARCH models generalized ARMA models defined according link function, response distribution, two model structure parameters – number autoregressive terms (p) order moving average (q), represented GARCH(p, q) (Liboschik et al. 2017). pGARCH model fit using log link Poisson response, well p = 1 (first-order autoregression) q = 13 (approximately yearly moving average). Forecasts made using portalcasting method function forecast.tsglm forecast.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"psgarch","dir":"Articles","previous_headings":"Models","what":"psGARCH","title":"Current Models","text":"psGARCH (Poisson Seasonal Auto-Regressive Conditional Heteroskedasticity) generalized autoregressive conditional heteroskedasticity (GARCH) model seasonal predictors modeled using two Fourier series terms (sin cos fraction year) fit interpolated data. model fit using tsglm function tscount package (Liboschik et al. 2017). GARCH models generalized ARMA models defined according link function, response distribution, two model structure parameters – number autoregressive terms (p) order moving average (q), represented GARCH(p, q) (Liboschik et al. 2017). pGARCH model fit using log link Poisson response, well p = 1 (first-order autoregression) q = 13 (approximately yearly moving average). Forecasts made using portalcasting method function forecast.tsglm forecast.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"pevgarch","dir":"Articles","previous_headings":"Models","what":"pevGARCH","title":"Current Models","text":"pevGARCH (Poisson Environmental Variable Auto-Regressive Conditional Heteroskedasticity) generalized autoregressive conditional heteroskedasticity (GARCH) model. response variable Poisson, variety environmental variables considered covariates. overall model fit using portalcasting function meta_tsglm iterates submodels, fit using tsglm function tscount package (Liboschik et al. 2017). GARCH models generalized ARMA models defined according link function, response distribution, two model structure parameters – number autoregressive terms (p) order moving average (q), represented GARCH(p, q) (Liboschik et al. 2017). pevGARCH model fit using log link Poisson response, well p = 1 (first-order autoregression) q = 13 (yearly moving average). environmental variables potentially included model min, mean, max temperatures, precipitation, NDVI. tsglm function tscount package (Liboschik et al. 2017) uses (conditional) quasi-likelihood based approach inference. approach minimally evaluated models covariates, although preliminary simulation-based studies promising (Liboschik, Fokianos, Fried 2017). overall model composed 11 submodels (nonexhaustive) combination environmental covariates – [1] max temp, mean temp, precipitation, NDVI; [2] max temp, min temp, precipitation, NDVI; [3] max temp, mean temp, min temp, precipitation; [4] precipitation, NDVI; [5] min temp, NDVI; [6] min temp; [7] max temp; [8] mean temp; [9] precipitation; [10] NDVI; [11] -none- (intercept-). single best model 11 selected based AIC. Forecasts made using portalcasting method function forecast.tsglm forecast.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"random-walk","dir":"Articles","previous_headings":"Models","what":"Random Walk","title":"Current Models","text":"Random Walk fits hierarchical log-scale density random walk model Poisson observation process using JAGS (Just Another Gibbs Sampler) infrastructure (Plummer 2003). Similar NaiveArima model, Random Walk ARIMA order (0,1,0), Random Walk, underlying density takes random walk log scale, whereas NaiveArima, raw counts take random walk observation scale. two process parameters – mu (density species beginning time series) sigma (standard deviation random walk, Gaussian log scale). observation model additional parameters. prior distributions mu informed available data collected prior start data used time series. mu normally distributed mean equal average log-scale density standard deviation 0.04. sigma given uniform distribution 0 1. Random Walk model fit forecast using portalcasting functions fit_runjags forecast.runjags (called forecast), respectively.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"logistic","dir":"Articles","previous_headings":"Models","what":"Logistic","title":"Current Models","text":"Logistic fits hierarchical log-scale density logistic growth model Poisson observation process using JAGS (Just Another Gibbs Sampler) infrastructure (Plummer 2003). Building upon Random Walk model, Logistic expands upon “process model” underlying Poisson observations. four process parameters – mu (density species beginning time series), sigma (standard deviation random walk, Gaussian log scale), r (growth rate), K (carrying capacity). observation model additional parameters. prior distributions mu K slightly informed vague centered using available data sigma r set vague priors. mu normally distributed mean equal average log-scale density standard deviation 0.04. K modeled log-scale prior mean equal log maximum count standard deviation 0.04. r given normal prior mean 0 standard deviation 0.04. sigma given uniform distribution 0 1. Logistic model fit forecast using portalcasting functions fit_runjags forecast.runjags (called forecast), respectively.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"logistic-covariates","dir":"Articles","previous_headings":"Models","what":"Logistic Covariates","title":"Current Models","text":"Logistic Covariates fits hierarchical log-scale density logistic growth model Poisson observation process using JAGS (Just Another Gibbs Sampler) infrastructure (Plummer 2003). Building upon Logistic model, Logistic Covariates expands upon “process model” underlying Poisson observations. six process parameters – mu (density species beginning time series), sigma (standard deviation random walk, Gaussian log scale), intercept slope parameters r (growth rate) K (carrying capacity) function covariates (r function integrated warm rain past 3 lunar months K function average NDVI 13 lunar months). observation model additional parameters. prior distributions mu K interceptare slightly informed vague centered using available data sigma r set vague priors. mu normally distributed mean equal average log-scale density standard deviation 0.04. K intercept modeled log-scale prior mean equal maximum count standard deviation 0.04. r intercept given normal prior mean 0 standard deviation 0.04. sigma given uniform distribution 0 1. slopes r log-scale K given priors mean 0 standard deviation 1. Logistic Covariates model fit forecast using portalcasting functions fit_runjags forecast.runjags (called forecast), respectively.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"logistic-competition","dir":"Articles","previous_headings":"Models","what":"Logistic Competition","title":"Current Models","text":"Logistic Competition fits hierarchical log-scale density logistic growth model Poisson observation process using JAGS (Just Another Gibbs Sampler) infrastructure (Plummer 2003). Building upon Logistic model, Logistic Competition expands upon “process model” underlying Poisson observations. six process parameters – mu (density species beginning time series), sigma (standard deviation random walk, Gaussian log scale), intercept slope parameters r (growth rate) K (carrying capacity) function competitior density (K function current counts). observation model additional parameters. prior distributions mu K intercept slightly informed vague centered using available data sigma r set vague priors. mu normally distributed mean equal average log-scale density standard deviation 0.04. K intercept modeled log-scale prior mean equal maximum past counts standard deviation 0.04. r intercept given normal prior mean 0 standard deviation 0.04. sigma given uniform distribution 0 1. slope log-scale K given prior mean 0 standard deviation 1. Logistic Competition model fit forecast using portalcasting functions fit_runjags forecast.runjags (called forecast), respectively.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"logistic-competition-covariates","dir":"Articles","previous_headings":"Models","what":"Logistic Competition Covariates","title":"Current Models","text":"Logistic Competition Covariates fits hierarchical log-scale density logistic growth model Poisson observation process using JAGS (Just Another Gibbs Sampler) infrastructure (Plummer 2003). Building upon Logistic model, Logistic Competition Covariates expands upon “process model” underlying Poisson observations. seven process parameters – mu (density species beginning time series), sigma (standard deviation random walk, Gaussian log scale), intercept slope parameters r (growth rate) K (carrying capacity) r function integrated warm rain past 3 lunar months K function average NDVI past 13 lunar months well function current count). observation model additional parameters. prior distributions mu K intercept slightly informed vague centered using available data sigma r set vague priors. mu normally distributed mean equal average log-scale density standard deviation 0.04. K intercept modeled log-scale prior mean equal maximum count standard deviation 0.04. r intercept given normal prior mean 0 standard deviation 0.04. Sigma given uniform distribution 0 0.001. slope r given normal prior mean 0 standard deviation 1, whereas normal priors log K slopes given mean 0 standard deviation 0.0625. Logistic Competition Covariates model fit forecast using portalcasting functions fit_runjags forecast.runjags (called forecast), respectively.","code":""},{"path":"https://weecology.github.io/portalcasting/articles/current_models.html","id":"ensemble","dir":"Articles","previous_headings":"Models","what":"Ensemble","title":"Current Models","text":"addition base models, include starting-point ensemble. Prior v0.9.0, ensemble based AIC weights, shift separating interpolated non-interpolated data model fitting, transfer unweighted average ensemble model. ensemble mean calculated mean model means ensemble variance estimated sum mean model variances variance estimated mean, calculated using unbiased estimate sample variances. Given current ensemble unweighted includes number naive models, currently consider best model forecasting.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/articles/getting_started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started","text":"First things first, make sure current version portalcasting installed GitHub:","code":"install.packages(\"remotes\") remotes::install_github(\"weecology/portalcasting\") library(portalcasting)"},{"path":"https://weecology.github.io/portalcasting/articles/getting_started.html","id":"create-a-portal-predictions-directory","dir":"Articles","previous_headings":"","what":"Create a Portal Predictions directory","title":"Getting Started","text":"setup_dir() function creates populates standard Portal Predictions directory includes resources, data, models, fits, forecasts subdirectories. default, setup_dir() downloads --date version Portal Data archive GitHub NMME downscaled weather forecasts resources subdirectory; unpacks relevant components; prepares newmoons, rodents, covariates, covariate forecast, metadata data files (places data subdirectory); populates models subdirectory scripts fifteen existing models (AutoARIMA, Seasonal AutoARIMA, ESSS, NaiveARIMA, Seasonal NaiveARIMA, nbGARCH, nbsGARCH, pGARCH, psGARCH, pevGARCH, Random Walk, Logistic, Logistic Covariates, Logistic Competition, Logistic Competition Covariates). Specialized versions setup_dir tailored local model exploration, development, testing (“setup_sandbox”) use real-deal pipeline (“setup_production”). settings fairly similar, although setup_sandbox extra rigid argument checking turned extra verbose messaging turned . addition, download repository archive resource (Portal Data NMME resources). setup_production provides robust starting point user interested seeing range package can , specific error checking verbose messaging. setup_production download entire Portal Predictions archive GitHub. Note downloading full directory take minutes. many arguments available user tailor setup directory, can found help pages (?setup_dir ?directory_settings). Perhaps important argument main allows user point directory particular location. default main = \".\", basically “present directory”. common implementation create directory home directory computer (indicated \"~\") within named folder, say “portalcast_directory”, done main = \"~/portalcast_directory\", setting main <- \"~/portalcast_directory\" using main = main throughout code: models datasets arguments setup_<> functions allow control models rodent data sets included directory, new models datasets can added long given controls new_dataset_controls new_model_controls arguments. Many additional arguments altering directory set available indirectly via settings argument wrapped directory_settings functions.","code":"main <- \"~/portalcast_directory\" setup_dir(main = main)"},{"path":"https://weecology.github.io/portalcasting/articles/getting_started.html","id":"run-a-forecast","dir":"Articles","previous_headings":"","what":"Run a forecast","title":"Getting Started","text":"portalcast() function controls running potentially multiple models across various species different data sets given time setup (defined directory_settings time_settings specifically). can involve classically called “forecasts” (present time step) “hindcasts” (time step current one), although data must set accordingly (using time_settings) time point prior invoking portalcast(). Presently, preloaded model set includes fifteen models: AutoARIMA, Seasonal AutoARIMA, ESSS, NaiveARIMA, Seasonal NaiveARIMA, nbGARCH, nbsGARCH, pGARCH, psGARCH, pevGARCH, Random Walk, Logistic, Logistic Covariates, Logistic Competition, Logistic Competition Covariates. jags GARCH models take bit longer run, purposes illustration, run ESSS, AutoArima, NaiveArima models, indicate input models argument: user specify models, prefab models run. Note need point portalcast directory interest via main argument. allows us go different directories R session relative ease, mean main key argument nearly functions. Indeed, main argument many portalcasting functions.","code":"portalcast(main = main, models = c(\"ESSS\", \"AutoArima\", \"NaiveArima\"))"},{"path":"https://weecology.github.io/portalcasting/articles/getting_started.html","id":"plot-the-results","dir":"Articles","previous_headings":"","what":"Plot the results","title":"Getting Started","text":"Presently two plotting types available visualizing data model results: time series point--time plots forecasts. functions figure types point directly forecast metadata file allows flexible selection specific model, data set, end moon (forecast origin) use, well selection via specific identifiers (multiple versions model run). Time series plots constructed using plot_forecast_ts: Point--time prediction plots constructed using plot_forecast_point, default next step ahead time:","code":"plot_forecast_ts(main = main, dataset = \"controls\") plot_forecast_point(main = main, dataset = \"controls\")"},{"path":"https://weecology.github.io/portalcasting/articles/getting_started.html","id":"reading-in-data-to-the-r-console-from-the-directory","dir":"Articles","previous_headings":"","what":"Reading in data to the R console from the directory","title":"Getting Started","text":"series read_<name> functions available simple loading data sets R directory. generalized read_data function includes argument data set load (“rodents” [specific data set], “covariates”, “climate_forecasts”, “newmoons”, “metadata”), data sets also specific function, read_moons. read_forecasts_metadata function , called via read_data currently.","code":"read_data(main = main, data_name = \"rodents\") read_data(main = main, data_name = \"rodents_dataset\", dataset = \"all\") read_data(main = main, data_name = \"rodents_dataset\", dataset = \"controls\") read_data(main = main, data_name = \"covariates\") read_data(main = main, data_name = \"climate_forecasts\") read_data(main = main, data_name = \"newmoons\") read_data(main = main, data_name = \"metadata\")  read_rodents(main = main) read_rodents_dataset(main = main) read_covariates(main = main) read_climate_forecasts(main = main) read_newmoons(main = main) read_metadata(main = main) read_forecasts_metadata(main = main)"},{"path":"https://weecology.github.io/portalcasting/articles/getting_started.html","id":"reading-in-forecast-output-to-the-r-console-from-the-directory","dir":"Articles","previous_headings":"","what":"Reading in forecast output to the R console from the directory","title":"Getting Started","text":"Presently, four functions available interfacing saved forecast output. select_forecasts provides simple interface forecast metadata file quick filtering: read_forecast_tab, read_model_forecast, read_forecasts_metadata read associated output given forecast, indicated forecast_id, displayed output select_forecasts:","code":"select_forecasts(main = main, models = \"AutoArima\") read_forecast_table(main = main) read_model_forecast(main = main) read_forecast_metadata(main = main)"},{"path":"https://weecology.github.io/portalcasting/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juniper L. Simonis. Author, maintainer. Glenda M. Yenni. Author. Ellen K. Bledsoe. Author. Erica M. Christensen. Author. Patricia K. T. Dumandan. Author. Henry Senyondo. Author. Hao Ye. Author. Ethan P. White. Author. S. K. Morgan Ernest. Author.","code":""},{"path":"https://weecology.github.io/portalcasting/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Juniper L. Simonis, Glenda M. Yenni, Ellen K. Bledsoe, Erica M. Christensen, Henry Senyondo, Shawn D. Taylor, Hao Ye, Ethan P. White, S. K. Morgan Ernest. (2022). portalcasting: Supporting automated forecasting rodent populations. Journal Open Source Software, 7(72), 3220, https://doi.org/10.21105/joss.03220","code":"@Article{simonis2022portalcasting,   title = {portalcasting: Supporting automated forecasting of rodent populations},   author = {Juniper L. Simonis and Glenda M. Yenni and Ellen K. Bledsoe and Erica M. Christensen and Henry Senyondo and Shawn D. Taylor and Hao Ye and Ethan P. White and S. K. Morgan Ernest},   year = {2022},   journal = {Journal of Open Source Software},   volume = {7},   number = {72},   pages = {3220},   doi = {10.21105/joss.03220},   publisher = {The Open Journal}, }"},{"path":[]},{"path":"https://weecology.github.io/portalcasting/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Functions Used in Predicting Portal Rodent Dynamics","text":"portalcasting package provides model development, deployment, evaluation system forecasting ecological systems change time, focus widely used long-term study mammal population community dynamics, Portal Project. combines Portal Data Repository portalr data management package pipeline automate weekly forecasting. Forecasts archived GitHub Zenodo. Portal Forecasting website provides dynamic view results. portalcasting’s functions also portable, allowing users set fully-functional replica repository local remote machine. facilitates development testing new models via sandbox approach.","code":""},{"path":"https://weecology.github.io/portalcasting/index.html","id":"status-deployed-active-development","dir":"","previous_headings":"","what":"Status: Deployed, Active Development","title":"Functions Used in Predicting Portal Rodent Dynamics","text":"portalcasting package deployed use within Portal Predictions repository, providing underlying R code populate directory --date data, analyze data, produce new forecasts, generate new output figures, render new version website. code underlying forecasting functionality migrated predictions repository, contains code executed continuous integration. relocated code , portalcasting package location active development model set additional functionality. leverage software container enable reproducibility predictions repository. Presently, use Docker image software environment create container running code. image automatically rebuilt new portalcasting release, tagged latest version-specific (vX.X.X) tags, pushed DockerHub. latest image updated releases, current master branch code portalcasting necessarily always executed within predictions repository. development image (dev) built master branch portalcasting every push facilitate testing considered stable. API moderately well defined point, still evolving.","code":""},{"path":"https://weecology.github.io/portalcasting/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions Used in Predicting Portal Rodent Dynamics","text":"can install package github:","code":"install.packages(\"remotes\") remotes::install_github(\"weecology/portalcasting\")"},{"path":"https://weecology.github.io/portalcasting/index.html","id":"production-environment","dir":"","previous_headings":"","what":"Production environment","title":"Functions Used in Predicting Portal Rodent Dynamics","text":"wish spin local container latest portalcasting image (ensure using copy current production environment implementation portalcasting pipeline), can run shell computer Docker installed.","code":"sudo docker pull weecology/portalcasting"},{"path":"https://weecology.github.io/portalcasting/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Functions Used in Predicting Portal Rodent Dynamics","text":"Get started “set Portal Predictions directory” vignette. interested adding model preloaded set models, see “adding model” vignette.","code":""},{"path":"https://weecology.github.io/portalcasting/index.html","id":"developer-and-contributor-notes","dir":"","previous_headings":"","what":"Developer and Contributor notes","title":"Functions Used in Predicting Portal Rodent Dynamics","text":"welcome contributions form models pipeline changes. workflow, please checkout contribution code conduct pages.","code":""},{"path":"https://weecology.github.io/portalcasting/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Functions Used in Predicting Portal Rodent Dynamics","text":"project developed active collaboration DAPPER Stats. motivating study—Portal Project—funded nearly continuously since 1977 National Science Foundation, recently DEB-1622425 S. K. M. Ernest. Much computational work supported Gordon Betty Moore Foundation’s Data-Driven Discovery Initiative Grant GBMF4563 E. P. White. thank Heather Bradley logistical support, John Abatzoglou assistance climate forecasts, James Brown establishing Portal Project.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-configuration-file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, Update, and Read the Directory Configuration File — directory configuration file","title":"Create, Update, and Read the Directory Configuration File — directory configuration file","text":"directory configuration file special file within directory setup set functions. write_directory_configuration creates YAML metadata configuration file. () called within setup_dir, captures information compute environment used instantiate directory. read_directory_configuration reads YAML config file R session. read_directory_settings reads YAML config file R session pulls just directory settings list .","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-configuration-file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, Update, and Read the Directory Configuration File — directory configuration file","text":"","code":"write_directory_configuration(   main = \".\",   settings = directory_settings(),   quiet = FALSE,   verbose = FALSE )  read_directory_configuration(main = \".\")  read_directory_settings(main = \".\")  update_directory_configuration(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/directory-configuration-file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, Update, and Read the Directory Configuration File — directory configuration file","text":"main character value name main component directory tree. settings list controls directory, defaults set directory_settings. quiet logical indicator progress messages quieted. verbose logical indicator whether print messages.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-configuration-file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, Update, and Read the Directory Configuration File — directory configuration file","text":"list directory configurations, invisible-ly.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/directory-configuration-file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, Update, and Read the Directory Configuration File — directory configuration file","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"standard\")    setup_dir(main = main1)     settings1 <- read_directory_settings(main = main1)    config1   <- read_directory_configuration(main = main1)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/directory-creation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or Update the Structure of a Directory and Fill It with Content or Update an Existing Directory — directory creation","title":"Create or Update the Structure of a Directory and Fill It with Content or Update an Existing Directory — directory creation","text":"Instantiates necessary folder structure directory, writes setup configuration file, fills directory content.  Options pre-defined setups include setup_sandbox quick flexible builds setup_production robust, rigid builds, defined directory_settings. update_dir updates existing directory update_sandbox update_production companions akin setup_<> functions.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-creation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or Update the Structure of a Directory and Fill It with Content or Update an Existing Directory — directory creation","text":"","code":"create_dir(   main = \".\",   settings = directory_settings(),   quiet = FALSE,   verbose = FALSE )  update_dir(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   new_datasets_controls = NULL,   new_models_controls = NULL,   settings = directory_settings(),   quiet = FALSE,   verbose = FALSE )  update_production(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   settings = production_settings(),   quiet = FALSE,   verbose = TRUE )  update_sandbox(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   new_datasets_controls = NULL,   new_models_controls = NULL,   settings = sandbox_settings(),   quiet = FALSE,   verbose = FALSE )  setup_dir(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   new_datasets_controls = NULL,   new_models_controls = NULL,   settings = directory_settings(),   quiet = FALSE,   verbose = FALSE )  setup_production(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   settings = production_settings(),   quiet = FALSE,   verbose = TRUE )  setup_sandbox(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   new_datasets_controls = NULL,   new_models_controls = NULL,   settings = sandbox_settings(),   quiet = FALSE,   verbose = FALSE )"},{"path":"https://weecology.github.io/portalcasting/reference/directory-creation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or Update the Structure of a Directory and Fill It with Content or Update an Existing Directory — directory creation","text":"main character value name main component directory tree. Default value (\".\") roots directory present location. settings list controls directory, defaults set directory_settings. quiet logical indicator progress messages quieted. verbose logical indicator whether produce messages. models character vector name(s) model(s) include. datasets character vector name(s) rodent dataset(s) created. new_datasets_controls Optional list controls new datasets. See datasets_controls. argument available setup_production. new_models_controls Optional list controls new models. See models_controls. argument available setup_production.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-creation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or Update the Structure of a Directory and Fill It with Content or Update an Existing Directory — directory creation","text":"list directory settings invisible-ly.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/directory-creation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create or Update the Structure of a Directory and Fill It with Content or Update an Existing Directory — directory creation","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"standard\")    main2 <- file.path(tempdir(), \"sandbox\")    main3 <- file.path(tempdir(), \"production\")     setup_dir(main = main1)    setup_sandbox(main = main2)    setup_production(main = main3)     update_dir(main = main1)     unlink(main1, recursive = TRUE)    unlink(main2, recursive = TRUE)    unlink(main3, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/directory-filling.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill a Portalcasting Directory with Basic Components — directory filling","title":"Fill a Portalcasting Directory with Basic Components — directory filling","text":"Fill directory components including: * Resources (fill_resources) * raw data (download_observations) * directory archive (download_archive) * climate forecasts (download_climate_forecasts) * Output * forecasts (fill_forecasts) * model fits (fill_fits) * Data (fill_data) * rodent datasets (prepare_rodents) * temporal (lunar) data (prepare_newmoons) * covariates (prepare_covariates) * metadata (prepare_metadata) * Models (fill_models) * models controls (write_models_controls) * models scripts (needed) (write_models_scripts) * Web Application (fill_app) * transfers app files package main * renders (render) sources (source) files HTML.  Additionally, new models datasets can added directory filling using optional arguments new_models_controls new_datasets_controls, model dataset must still listed respective main argument, well.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-filling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill a Portalcasting Directory with Basic Components — directory filling","text":"","code":"fill_dir(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   new_datasets_controls = NULL,   new_models_controls = NULL )  fill_data(   main = \".\",   datasets = prefab_datasets(),   new_datasets_controls = NULL )  fill_app(main = \".\")  fill_resources(main = \".\")  fill_forecasts(main = \".\")  fill_fits(main = \".\")  fill_models(main = \".\", models = prefab_models(), new_models_controls = NULL)"},{"path":"https://weecology.github.io/portalcasting/reference/directory-filling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill a Portalcasting Directory with Basic Components — directory filling","text":"main character value name main component directory tree. models character vector name(s) model(s) include. Defaults prefab_models. controls provided new_models_controls, model still needs named included. datasets character vector name(s) rodent dataset(s) created. Defaults prefab_datasets. controls provided new_datasets_controls, dataset still needs named included. new_datasets_controls Optional named list controls new datasets. See datasets_controls. new_models_controls Optional named list controls new models. See models_controls.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-filling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill a Portalcasting Directory with Basic Components — directory filling","text":"NULL, invisible-ly.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/directory-filling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill a Portalcasting Directory with Basic Components — directory filling","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"fill_standard\")    main2 <- file.path(tempdir(), \"fill_production\")     create_dir(main = main1)    fill_dir(main = main1)     create_dir(main = main2, settings = production_settings())    fill_resources(main = main2)    fill_forecasts(main = main2)    fill_fits(main = main2)    fill_models(main = main2)    fill_data(main = main2)    fill_app(main = main2)     unlink(main1, recursive = TRUE)    unlink(main2, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/directory-paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a List of Full Directory Paths — directory paths","title":"Create a List of Full Directory Paths — directory paths","text":"Upon creation (updating) directory, standard file subdirectory paths set based directory_settings. paths produces full path list, whose contents can also accessed specialized functions, see Details.  also special function shiny application location, either referencing file folder.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a List of Full Directory Paths — directory paths","text":"","code":"paths(main = \".\")  models_rmd_path(main = \".\")  models_html_path(main = \".\")  about_md_path(main = \".\")  rodents_profiles_html_path(main = \".\")  rodents_profiles_csv_path(main = \".\")  rodents_datasets_controls_path(main = \".\")  models_controls_path(main = \".\")  rodents_dataset_path(main = \".\", dataset = \"all\")  species_names_path(main = \".\")  climate_forecasts_paths(main = \".\")  forecasts_metadata_path(main = \".\")  forecasts_evaluations_path(main = \".\")  forecasts_results_path(main = \".\")  newmoons_path(main = \".\")  covariates_path(main = \".\")  metadata_path(main = \".\")  www_path(main = \".\")  app_paths(main = \".\")  data_path(main = \".\")  forecasts_path(main = \".\")  fits_path(main = \".\")  models_path(main = \".\")  resources_path(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/directory-paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a List of Full Directory Paths — directory paths","text":"main character value name main component directory tree. dataset character value name rodent dataset.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a List of Full Directory Paths — directory paths","text":"list directory paths specific character paths.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a List of Full Directory Paths — directory paths","text":"Wrapper functions specific subdirectories files include: Files rodents_dataset_path species_names_path climate_forecasts_paths forecasts_metadata_path forecasts_evaluations_path forecasts_results_path newmoons_path covariates_path metadata_path models_controls_path models_rmd_path rodents_profiles_html_path rodents_profiles_csv_path Subdirectories www_path data_path forecasts_path fits_path models_path Shiny Application app_paths","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/directory-paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a List of Full Directory Paths — directory paths","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"standard\")    create_dir(main = main1)     paths(main = main1)     newmoons_path(main = main1)     species_names_path(main = main1)    rodents_dataset_path(main = main1)    rodents_datasets_paths(main = main1)     covariates_path(main = main1)    climate_forecasts_paths(main = main1)     metadata_path(main = main1)     forecasts_metadata_path(main = main1)    forecasts_evaluations_path(main = main1)    forecasts_results_path(main = main1)     models_controls_path(main = main1)     models_rmd_path(main = main1)    models_html_path(main = main1)    about_md_path(main = main1)    rodents_profiles_html_path(main = main1)    rodents_profiles_csv_path(main = main1)     app_paths(main = main1)     www_path(main = main1)    data_path(main = main1)    forecasts_path(main = main1)    fits_path(main = main1)    models_path(main = main1)    resources_path(main = main1) }"},{"path":"https://weecology.github.io/portalcasting/reference/directory-settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Directory Settings List — directory settings","title":"Create a Directory Settings List — directory settings","text":"Compose parts complete directory settings controls lists.  users want need change directory folders file names, helpful flexible certain circumstances, directory_files, directory_subdirectories, directory_settings gather set lists pipeline functionality. directory_resources dictates source version (specialized arguments) raw resources collected directory. time_settings collates temporal aspects data, can used set alternate forecast timelines specialized projects sandboxing.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Directory Settings List — directory settings","text":"","code":"directory_settings(   files = directory_files(),   subdirectories = directory_subdirectories(),   resources = directory_resources(),   time = time_settings(),   confidence_level = 0.95,   nsamples = 10000,   save = TRUE,   overwrite = TRUE,   force = FALSE,   unzip_pause = 30,   download_timeout = getOption(\"timeout\") )  time_settings(   timeseries_start = as.Date(\"1995-01-01\"),   origin = Sys.Date(),   forecast_date = Sys.Date(),   lead_time = 365,   max_lag = 365,   lag_buffer = 60,   lead_time_buffer = 30 )  directory_files(   directory_configuration = \"directory_configuration.yaml\",   app = \"app.R\",   newmoons = \"newmoons.csv\",   covariates = \"covariates.csv\",   datasets_controls = \"datasets_controls.yaml\",   models_controls = \"models_controls.yaml\",   forecasts_evaluations = \"forecasts_evaluations.csv\",   forecasts_results = \"forecasts_results.csv\",   forecasts_metadata = \"forecasts_metadata.csv\",   metadata = \"metadata.yaml\",   about_md = \"about.md\",   models_html = \"models.html\",   models_rmd = \"models.Rmd\",   rodents_profiles_html = \"rodents_profiles.html\",   rodents_profiles_csv = \"rodents_profiles.csv\",   species_names = \"species_names.csv\" )  directory_subdirectories(   forecasts = \"forecasts\",   fits = \"fits\",   models = \"models\",   resources = \"resources\",   data = \"data\",   www = \"www\" )  directory_resources(   PortalData = list(source = \"github\", version = \"latest\"),   portalPredictions = list(source = \"github\", version = NULL),   climate_forecasts = list(source = \"NMME\", version = as.character(Sys.Date()), data =     list(mintemp = \"tasmin\", meantemp = \"tasmean\", maxtemp = \"tasmax\", precipitation =     \"pr\")) )  production_settings(download_timeout = max(getOption(\"timeout\"), 600))  sandbox_settings()"},{"path":"https://weecology.github.io/portalcasting/reference/directory-settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Directory Settings List — directory settings","text":"files list character names standard files, see directory_files. subdirectories list character names standard subdirectories, see directory_subdirectories. resources character name resources subdirectory. time list time settings, see time_settings. confidence_level numeric confidence level used summarizing model output. Must 0 1. nsamples integer (integer numeric) number samples used summarizing model output sample-based estimates. save logical indicator controlling output saved . overwrite logical indicator whether file writing occur even local copy already exists. force logical indicator whether existing files folders (archive) -written --date copy exists (users leave FALSE). unzip_pause Positive integer integer numeric seconds pausing steps around unzipping require time delay. download_timeout Positive integer integer numeric seconds timeout downloads. Temporarily overrides \"timeout\" option base::options. timeseries_start Date historic samples included timeseries fit. Default value 1995-01-01, corresponding moon 217. origin Date forecast origin. Default today's date (set using Sys.Date). forecast_date Date forecasts occurring. Default today's date (set using Sys.Date). lead_time integer (integer numeric) value number calendar days forward forecast cover.  version 0.51.0, default now 365, divided 29.5 (duration lunar month), gives 13. previous value previously 12. now using 13 align timestep lunar month, 13 lunar months covers full calendar year. max_lag integer (integer numeric) maximum number calendar days covariate lagged prediction model.  Default 365 logistic covariate models. lag_buffer integer (integer numeric) additional number calendar days back time add maximum lag.  Default value 60 corresponds two additional lunar months. lead_time_buffer integer (integer numeric) additional number calendar days forward time forecast.  Default value 30 corresponds one additional lunar month. directory_configuration character name directory configuration YAML. app character name application R file. newmoons character name lunar data csv. covariates character name combined historical forecast covariates csv. datasets_controls character name YAML datasets control list(s). models_controls character name YAML models controls list(s). forecasts_evaluations character name forecast evaluations csv. forecasts_results character name forecast combination results csv. forecasts_metadata character name forecast metadata csv. metadata character name Forecast metadata YAML. about_md character name md file page app. models_html character name html file models page saved app. models_rmd character name Rmd file models page app. rodents_profiles_html character name html file rodents profiles page saved app. rodents_profiles_csv character name csv file containing content rodents profiles table app. species_names character name csv file containing output portalr::rodent_species, set = \"forecasting\", type = \"table\", total = TRUE. forecasts character name forecasts subdirectory. fits character name fits subdirectory. models character name models subdirectory. data character name data subdirectory. www character name application www helpers subdirectory. PortalData list source version elements character values Portal Data download. Default values retrieve latest data github portalPredictions list source version elements character values archive download. Default values point github, verison = NULL indicates download. climate_forecasts list source, version, data elements character values climate forecasts download. Default values retrieve current day's forecast min, mean, max temperature precipitation Northwest Knowledge Network's North American Multi-Model Ensemble (NMME) climate forecasts.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/directory-settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Directory Settings List — directory settings","text":"Named list settings directory (directory_settings) list settings components (directory_files, directory_subdirectories, directory_resources).","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/directory-settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Directory Settings List — directory settings","text":"","code":"directory_settings( )    directory_files( )    directory_subdirectories( )    directory_resources( )    time_settings( )"},{"path":"https://weecology.github.io/portalcasting/reference/download-archive.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the Portal Predictions Repository Archive — download archive","title":"Download the Portal Predictions Repository Archive — download archive","text":"Downloads specific version Portal Predictions repository either GitHub Zenodo (based source) <main>/raw sub.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/download-archive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the Portal Predictions Repository Archive — download archive","text":"","code":"download_archive(   main = \".\",   resources_sub = \"resources\",   version = \"latest\",   source = \"github\",   quiet = FALSE,   verbose = FALSE,   force = FALSE,   pause = 30,   timeout = getOption(\"timeout\") )"},{"path":"https://weecology.github.io/portalcasting/reference/download-archive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the Portal Predictions Repository Archive — download archive","text":"main character value defining main component portalcasting directory tree. resources_sub character value defining resources subdirectory portalcasting directory tree. version character version data download. Default \"latest\" downloads recent (date published). NULL means download. source character indicator source download. Either \"github\" (default) \"zenodo\". quiet logical indicator progress messages quieted. verbose logical indicator detailed messages generated. force logical indicator whether existing files folders (archive) -written --date copy exists (users leave FALSE). pause Positive integer integer numeric seconds pausing steps around unzipping require time delay. timeout Positive integer integer numeric seconds timeout downloads. Temporarily overrides \"timeout\" option options.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/download-archive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the Portal Predictions Repository Archive — download archive","text":"NULL, invisible-ly.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/download-archive.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download the Portal Predictions Repository Archive — download archive","text":"two calls base::Sys.sleep pause seconds allow file unzipping, copying, catch .","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/download-archive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the Portal Predictions Repository Archive — download archive","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"archive\")    create_dir(main = main1)    download_archive(main = main1)    unlink(main1, recursive = TRUE)  }"},{"path":"https://weecology.github.io/portalcasting/reference/download-climate-forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Climate Forecasts — download climate forecasts","title":"Download Climate Forecasts — download climate forecasts","text":"Downloads climate forecasts, presently North American Multi-Model Ensemble (NMME), <main>/<resources> sub. download_climate_forecasts downloads files pre-defined URLs. NMME_urls generates URL specific request NMME API based parameters. See arguments specifics Details links.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/download-climate-forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Climate Forecasts — download climate forecasts","text":"","code":"download_climate_forecasts(   main = \".\",   resources_sub = \"resources\",   version = Sys.Date(),   source = \"NMME\",   data = c(\"tasmin\", \"tasmean\", \"tasmax\", \"pr\"),   quiet = FALSE,   verbose = FALSE,   force = FALSE,   timeout = getOption(\"timeout\") )  NMME_urls(   start = Sys.Date(),   end = as.Date(\"2050-01-01\"),   model = \"ENSMEAN\",   lat = 31.9555,   lon = -109.0744,   freq = \"daily\",   data = c(\"tasmin\", \"tasmean\", \"tasmax\", \"pr\") )"},{"path":"https://weecology.github.io/portalcasting/reference/download-climate-forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Climate Forecasts — download climate forecasts","text":"main character value defining main component portalcasting directory tree. resources_sub character value defining resources subdirectory portalcasting directory tree. version Date-coercible start climate forecast. See NMME_urls (used start). source character indicator source download. \"NMME\" presently available. data character value type data, one \"tasmin\" (minimum temperature), \"tasmean\" (mean temperature), \"tasmax\" (maximum temperature), \"pr\" (precipitation), \"dps\" (dew point), \"rsds\" (shortwave radiation; sun intensity), \"\" (wind speed). quiet logical indicator progress messages quieted. verbose logical indicator detailed messages generated. force logical indicator whether existing files folders (archive) -written --date copy exists (users leave FALSE). timeout Positive integer integer numeric seconds timeout downloads. Temporarily overrides \"timeout\" option options. start, end Date start end forecast. model character value model use, one \"ENSMEAN\", (Multi-Model Mean), \"CMC1\" (CMC1-CanCM3), \"CMC2\" (CMC2-CanCM4), \"CFCSv2\" (NCEP-CFSv2), \"GFDL\" (GFDL-CM2.1), \"GFDL-FLOR\" (GFDL-FLOR), \"NCAR\" (NCAR-CCSM4). Presently can take one value. lat, lon numeric latitude longitude values used downscale model. Presently can take one value . freq character value frequency data, can \"daily\" \"XmonthAverage\", \"X\" number 1 7. Presently can take one value.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/download-climate-forecasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Climate Forecasts — download climate forecasts","text":"download_climate_forecasts: NULL, [invisible][base::invisible]-ly. \\cr NMME_urls: amed charactervector URLs, orNULLifdata, freq, modelisNULL`.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/download-climate-forecasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Climate Forecasts — download climate forecasts","text":"Northwest Knowledge Network (NKN) University Idaho provides  simple API download downscaled climate forecasts using North American Multi-Model Ensemble (NMME) set.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/download-climate-forecasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Climate Forecasts — download climate forecasts","text":"","code":"NMME_urls( )  if (FALSE) {    main1 <- file.path(tempdir(), \"dcf\")    create_dir(main = main1)    download_climate_forecasts(main = main1)    unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine (Ensemble) Casts — ensemble","title":"Combine (Ensemble) Casts — ensemble","text":"Combine multiple forecasts' output single ensemble. Presently, general average ensemble available.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine (Ensemble) Casts — ensemble","text":"","code":"ensemble_forecasts(   main = \".\",   method = \"unwtavg\",   forecasts_groups = NULL,   forecasts_ids = NULL,   forecast_table = NULL,   historic_end_newmoonnumber = NULL,   models = NULL,   dataset = NULL,   species = NULL )"},{"path":"https://weecology.github.io/portalcasting/reference/ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine (Ensemble) Casts — ensemble","text":"main character value name main component directory tree. method character value name ensemble method use. Presently, \"unwtavg\" (unweighted average) allowed. forecasts_groups integer (integer numeric) value forecasts groups combine ensemble. NULL (default), recent forecast group ensembled. forecasts_ids integer (integer numeric) values representing forecasts interest restricting ensembling, indexed within directory casts sub folder. See forecasts metadata file (forecasts_metadata.csv) summary information. forecast_table Optional data.frame forecast table outputs. input, loaded. historic_end_newmoonnumber integer (integer numeric) newmoon number forecast origin. Default value NULL, equates selection. models character value(s) name model include. Default value NULL, equates selection respect model. NULL translates models table. dataset character value rodent data set include Default value NULL, equates first data set encountered. species character vector species code(s) \"total\" total across species) plotted NULL translates species defined forecasting_species called prefab_species.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/ensemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine (Ensemble) Casts — ensemble","text":"data.frame ensembled forecasts.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/ensemble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine (Ensemble) Casts — ensemble","text":"pre-loaded table forecasts can input, (default), table efficiently (defined inputs) loaded trimmed.  forecasts can trimmed specifically using forecasts_ids input, otherwise, relevant forecasts stated forecast_groups included.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/ensemble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine (Ensemble) Casts — ensemble","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"ensemble\")    setup_production(main = main1)     forecasts_ids <- select_forecasts(main     = main1,                                       datasets = \"controls\",                                       species  = \"DM\")$forecast_id     ensemble_forecasts(main          = main1,                        forecasts_ids = forecasts_ids)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/evaluate-forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Forecasts — evaluate forecasts","title":"Evaluate Forecasts — evaluate forecasts","text":"Evaluate forecasts directory, based id(s).  Current metrics include raw error (can used calculate root mean squared error; RMSE), coverage, log score, continuous rank probability score (CRPS). read_forecasts_evaluations read forecasts evaluations file.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/evaluate-forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Forecasts — evaluate forecasts","text":"","code":"evaluate_forecasts(main = \".\", forecasts_ids = NULL)  evaluate_forecast(main = \".\", forecast_id = NULL)  read_forecasts_evaluations(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/evaluate-forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Forecasts — evaluate forecasts","text":"main character value name main component directory tree. forecast_id, forecasts_ids integer (integer numeric) value(s) representing forecasts interest evaluating, indexed within forecasts subdirectory. See forecasts metadata file (forecasts_metadata.csv) summary information. forecast_id can single value, whereas forecasts_ids can multiple.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/evaluate-forecasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate Forecasts — evaluate forecasts","text":"data.frame forecast evaluations observation (newmoon) level, requested, invisible-ly.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/evaluate-forecasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate Forecasts — evaluate forecasts","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"evaluations\")    setup_dir(main = main1)     plot_covariates(main = main1)     make_model_combinations(main = main1)     portalcast(main   = main1,                models = \"AutoArima\")     cast(main    = main1,         model   = \"AutoArima\",          dataset = \"controls\",          species = \"DM\")     ## evaluate_forecasts(main = main1) ## extensive runtime for full evaluation from scratch     ids <- select_forecasts(main = main1)$forecast_id             evaluate_forecast(main        = main1,                       forecast_id = ids[1])     read_forecasts_evaluations(main = main1)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/file_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine a File's Extension — file_ext","title":"Determine a File's Extension — file_ext","text":"Based separating character, determine file extension.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/file_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine a File's Extension — file_ext","text":"","code":"file_ext(path, sep_char = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/file_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine a File's Extension — file_ext","text":"path character value file path possibly extension. sep_char character value separator delineates extension file path.  Generally, .\", API URLs, extension actually query component, separator may sometimes need \"=\".","code":""},{"path":"https://weecology.github.io/portalcasting/reference/file_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine a File's Extension — file_ext","text":"character value extension (file_ext).","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/file_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine a File's Extension — file_ext","text":"","code":"file_ext(\"home/folders.with.dots/stuff/ok.csv\")    file_ext(NMME_urls()[[1]])    file_ext(NMME_urls()[[1]], \"=\")"},{"path":"https://weecology.github.io/portalcasting/reference/foy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Fraction of the Year from a Date — foy","title":"Calculate the Fraction of the Year from a Date — foy","text":"Based year date occurred, determine fraction year (foy) date (relation New Year's Eve year).","code":""},{"path":"https://weecology.github.io/portalcasting/reference/foy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Fraction of the Year from a Date — foy","text":"","code":"foy(dates = NULL)"},{"path":"https://weecology.github.io/portalcasting/reference/foy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Fraction of the Year from a Date — foy","text":"dates Date(s) Date-conformable value(s) converted fraction year.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/foy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Fraction of the Year from a Date — foy","text":"numeric value(s) fraction year.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/foy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Fraction of the Year from a Date — foy","text":"","code":"Sys.Date( )    foy(Sys.Date())"},{"path":"https://weecology.github.io/portalcasting/reference/ifnull.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a Value with an Alternative if it is NULL — ifnull","title":"Replace a Value with an Alternative if it is NULL — ifnull","text":"Replaces focal input alternative value NULL.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/ifnull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a Value with an Alternative if it is NULL — ifnull","text":"","code":"ifnull(x = NULL, alt = NULL)"},{"path":"https://weecology.github.io/portalcasting/reference/ifnull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a Value with an Alternative if it is NULL — ifnull","text":"x Focal input. alt Alternative value.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/ifnull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a Value with an Alternative if it is NULL — ifnull","text":"x NULL, alt otherwise.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/ifnull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace a Value with an Alternative if it is NULL — ifnull","text":"","code":"ifnull(NULL, 123)    ifnull(TRUE, 123)    ifnull(FALSE, 123)"},{"path":"https://weecology.github.io/portalcasting/reference/messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for Message Generation — messages","title":"Functions for Message Generation — messages","text":"Create messages use portalcasting pipeline. messageq: Optionally generate message based logical input. Uses wrapper message , given input quiet, generates message(s) ... . break_line: Creates horizontal line characters ending newline call messages. break_lines: Creates set horizontal line characters ending newline call messages. castle: Creates text drawing sandcastle characters messages.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/messages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for Message Generation — messages","text":"","code":"messageq(..., quiet = FALSE, domain = NULL, appendLF = TRUE)  break_line(char = \"-\", reps = 60)  break_lines(nlines = 2, char = \"-\", reps = 60)  castle()"},{"path":"https://weecology.github.io/portalcasting/reference/messages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for Message Generation — messages","text":"... zero objects can coerced character concatenated separator added, single condition object. See message. quiet logical indicator message generated. domain domain translation. NA, messages translated. See message base::gettext. appendLF logical indicator messages given character string newline appended. See message. char character value repeated reps times form break line. reps integer-conformable value number times char replicated. nlines integer-conformable value number break_lines include. Defaults 2 lines.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/messages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for Message Generation — messages","text":"messageq: message given, NULL returned, invisible-ly. break_line: character line passed message via messageq. break_lines: character lines passed message via messageq. castle: character sandcastle passed message via messageq.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/messages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for Message Generation — messages","text":"","code":"messageq(\"hi \", \"how are you?\")    messageq(\"hi \", \"how are you?\", quiet = TRUE)    break_line( )    break_lines( )    castle( )"},{"path":"https://weecology.github.io/portalcasting/reference/named_null_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Named Empty List — named_null_list","title":"Create a Named Empty List — named_null_list","text":"Produces list NULL element named according element_names.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/named_null_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Named Empty List — named_null_list","text":"","code":"named_null_list(element_names = NULL)"},{"path":"https://weecology.github.io/portalcasting/reference/named_null_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Named Empty List — named_null_list","text":"element_names character vector names elements list.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/named_null_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Named Empty List — named_null_list","text":"list names element_names values NULL.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/named_null_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Named Empty List — named_null_list","text":"","code":"named_null_list(c(\"a\", \"b\", \"c\"))"},{"path":"https://weecology.github.io/portalcasting/reference/new-datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Facilitate Adding Datasets to a Directory — new datasets","title":"Facilitate Adding Datasets to a Directory — new datasets","text":"Create new dataset's controls. Using dataset_controls_template file basis list leveraging element-specific functions fill details.  specific new_dataset_< > functions wraps update_list call starting dataset_controls_template main list taking named elements inputs via ....","code":""},{"path":"https://weecology.github.io/portalcasting/reference/new-datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facilitate Adding Datasets to a Directory — new datasets","text":"","code":"dataset_controls_template()  add_new_dataset(   main = \".\",   new_dataset_controls = dataset_controls_template(),   models = NULL )  new_dataset_controls(...)  new_dataset_metadata(...)  new_dataset_fun(fun = dataset_controls_template()$fun)  new_dataset_args(...)"},{"path":"https://weecology.github.io/portalcasting/reference/new-datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facilitate Adding Datasets to a Directory — new datasets","text":"main character value name main component directory tree. new_dataset_controls list controls new datasets (prefab datasets) listed datasets added control list file. models character vector names models controls updated include new dataset. ... Named list arguments passed update_list. fun character value generation function.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/new-datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facilitate Adding Datasets to a Directory — new datasets","text":"dataset_controls_template: list named dataset controls elements, many NULL. new_dataset_controls: list named dataset controls. new_dataset_metadata: list named dataset metadata elements controls list. new_dataset_fun: character dataset generation function. new_dataset_args: named list argument elements generating function. add_new_dataset: dataset controls list new dataset, invisible-ly.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/new-datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Facilitate Adding Datasets to a Directory — new datasets","text":"created using new_dataset_controls, new dataset's controls can either added directory directory creation (via setup_dir related setup_<> functions) update (via update_dir) steps via add_new_dataset.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/new-datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facilitate Adding Datasets to a Directory — new datasets","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"new_dataset_controls\")    setup_dir(main = main1)     dataset_controls_template( )     args <- new_dataset_args(name     = \"newdata\",                              filename = \"rodents_newdata.csv\")     new_controls <- new_dataset_controls(metadata = new_dataset_metadata(name = \"newdata\"),                                         args     = args)     added <- add_new_dataset(main                 = main1,                              new_dataset_controls = new_controls,                             models               = \"AutoArima\")      portalcast(main     = main1,                datasets = \"newdata\",                models   = \"AutoArima\")     unlink(main1, recursive = TRUE)  }"},{"path":"https://weecology.github.io/portalcasting/reference/new-models.html","id":null,"dir":"Reference","previous_headings":"","what":"Facilitate Adding Models to a Directory — new models","title":"Facilitate Adding Models to a Directory — new models","text":"Create new model's controls. Using model_controls_template file basis list leveraging element-specific functions fill details.  specific new_model_< > functions wraps update_list call starting model_controls_template main list taking named elements inputs via ....","code":""},{"path":"https://weecology.github.io/portalcasting/reference/new-models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facilitate Adding Models to a Directory — new models","text":"","code":"model_controls_template()  add_new_model(main = \".\", new_model_controls = model_controls_template())  new_model_controls(...)  new_model_metadata(...)  new_model_fit(...)  new_model_forecast(...)  new_model_interpolate(...)  new_model_datasets(...)  new_model_response(...)"},{"path":"https://weecology.github.io/portalcasting/reference/new-models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facilitate Adding Models to a Directory — new models","text":"main character value name main component directory tree. new_model_controls list controls new models (prefab models) listed models added control list file. ... Named list arguments passed update_list.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/new-models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facilitate Adding Models to a Directory — new models","text":"model_controls_template: list named model controls elements, many NULL. new_model_controls: list named model controls. new_model_metadata: list named model metadata elements controls list. new_model_fit: list named model fit function argument elements controls list. new_model_forecast: list named forecast function argument elements controls list. new_model_interpolate: list named interpolation requirements elements controls list. new_model_datasets: list named dataset elements controls list. new_model_response: list named response data description elements controls list. add_new_model: model controls list new model, invisible-ly.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/new-models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Facilitate Adding Models to a Directory — new models","text":"created using new_model_controls, new model's controls can either added directory directory creation (via setup_dir related setup_<> functions) update (via update_dir) steps via add_new_model.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/new-models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facilitate Adding Models to a Directory — new models","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"new_model_controls\")    setup_dir(main = main1)     model_controls_template( )     new_controls <- new_model_controls(metadata = new_model_metadata(name       = \"newmod\",                                                                      print_name = \"New Model\"),                                       fit      = new_model_fit(fun  = \"arima\",                                                                 args = list(x = \"abundance\")),                                       response = new_model_response(link           = \"normal\",                                                                      type           = \"distribution\",                                                                      scoring_family = \"normal\"))    added <- add_new_model(main               = main1,                            new_model_controls = new_controls)     portalcast(main     = main1,                models   = \"newmod\",                datasets = \"all\",                species  = c(\"DM\", \"PP\", \"total\"))      unlink(main1, recursive = TRUE)  }"},{"path":"https://weecology.github.io/portalcasting/reference/package_version_finder.html","id":null,"dir":"Reference","previous_headings":"","what":"Find an Object's Host Package and Version Information — package_version_finder","title":"Find an Object's Host Package and Version Information — package_version_finder","text":"Locate basic package information R object. nothing input, operates .  object sourced multiple packages, package version included.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/package_version_finder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find an Object's Host Package and Version Information — package_version_finder","text":"","code":"package_version_finder(what)"},{"path":"https://weecology.github.io/portalcasting/reference/package_version_finder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find an Object's Host Package and Version Information — package_version_finder","text":"R object.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/package_version_finder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find an Object's Host Package and Version Information — package_version_finder","text":"list object, class, packages sourced / , versions packages.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/package_version_finder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find an Object's Host Package and Version Information — package_version_finder","text":"","code":"package_version_finder( )"},{"path":"https://weecology.github.io/portalcasting/reference/plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Portalcasting Data and Forecasts — plots","title":"Visualize Portalcasting Data and Forecasts — plots","text":"plot_forecasts_error_lead: lots raw error (estimate - observation) function lead time across model runs different forecast origins multiple models multiple species (total) within data set. plot_covariates: plots observed timeseries forecast timeseries covariates used. plot_forecast_ts: plots observed timeseries forecast timeseries prediction interval. Observations occurred forecast shown connected directly pre-cast observation data (black solid line points).plot_forecast_point: plots point value confidence interval time point across multiple species. Casts can selected either supplying forecast_id number combination dataset, model, historic_end_newmoonnumber, filter available forecasts unison. plot type can handle output single forecast, multiple forecasts still remain, one highest number selected. certain forecast selection, use forecast_id input.  plot_forecasts_cov_RMSE: plots coverage (fraction predictions within CI) RMSE (root mean squared error) model among multiple species.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Portalcasting Data and Forecasts — plots","text":"","code":"plot_forecasts_error_lead(   main = \".\",   forecasts_ids = NULL,   forecasts_evaluations = NULL,   historic_end_newmoonnumbers = NULL,   models = NULL,   datasets = NULL,   species = NULL )  plot_forecasts_cov_RMSE(   main = \".\",   forecasts_metadata = NULL,   forecasts_ids = NULL,   forecasts_evaluations = NULL,   historic_end_newmoonnumbers = NULL,   models = NULL,   datasets = NULL,   species = NULL )  plot_forecast_point(   main = \".\",   forecasts_metadata = NULL,   forecast_id = NULL,   dataset = NULL,   model = NULL,   historic_end_newmoonnumber = NULL,   species = NULL,   highlight_sp = NULL,   newmoonnumber = NULL,   with_census = FALSE )  plot_forecast_ts(   main = \".\",   forecasts_metadata = NULL,   forecast_id = NULL,   dataset = NULL,   model = NULL,   historic_start_newmoonnumber = NULL,   historic_end_newmoonnumber = NULL,   species = NULL )  plot_covariates(main = \".\", to_plot = \"ndvi\")"},{"path":"https://weecology.github.io/portalcasting/reference/plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Portalcasting Data and Forecasts — plots","text":"main character value name main component directory tree. forecasts_evaluations data.frame forecast evaluations, returned evaluate_forecasts. NULL (default), try read via read_forecasts_evaluations. species character vector species code(s) \"total\" total across species) plotted NULL translates species defined forecasting_species called prefab_species. forecasts_metadata data.frame forecast metadata. NULL (default), try read via read_forecasts_metadata. forecast_id, forecasts_ids integer (integer numeric) values representing forecasts interest restricting plotting, indexed within directory casts sub folder. See forecasts metadata file (forecasts_metadata.csv) summary information. forecast_id can length-1 NULL, whereas forecasts_ids length-restricted. dataset, datasets character value rodent data set(s) include. dataset can length-1 NULL, whereas datasets length-restricted. model, models character value(s) name model include. Default value NULL, equates selection respect model models. model can length-1 NULL, whereas models length-restricted. historic_end_newmoonnumber, historic_end_newmoonnumbers integer (integer numeric) newmoon number(s) forecast origin. Default value NULL, equates selection. historic_end_newmoonnumber can length-1 NULL, whereas historic_end_newmoonnumbers length-restricted. highlight_sp character vector species codes (\"total\" total across species) highlighted NULL (default) highlight anything. newmoonnumber integer (integer numeric) newmoon number plot. with_census logical toggle plot include observed data collected predicted census. historic_start_newmoonnumber integer (integer numeric) newmoon number beginning x-axis plot.  influence fit models, just presentation. to_plot character covariate plot, restricted column names covariates table (see read_covariates).","code":""},{"path":"https://weecology.github.io/portalcasting/reference/plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Portalcasting Data and Forecasts — plots","text":"NULL. Plot generated.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize Portalcasting Data and Forecasts — plots","text":"Casts can selected either supplying forecast_id number combination dataset, model, historic_end_newmoonnumber, filter available forecasts unison. plot type can handle output single forecast, multiple forecasts still remain, one highest number selected. certain forecast selection, use forecast_id input.  portalcasting v0.9.0, line bands plot_forecast_ts point bars plot_forecast_point represent mean 95 percent prediction interval.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Portalcasting Data and Forecasts — plots","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"figures\")    setup_production(main = main1)     plot_covariates(main = main1)     portalcast(main = main1, models = \"AutoArima\")     ids <- select_forecasts(main     = main3,                             species  = c(\"DM\", \"PP\", \"total\"),                            models   = c(\"AutoArima\", \"ESSS\", \"pevGARCH\", \"nbGARCH\", \"jags_RW\"),                            datasets = c(\"all\", \"controls\"))$forecast_id    nids         <- length(ids)    nsample_ids  <- 1000    forecasts_ids <- ids[round(seq(1, nids, length.out = nsample_ids))]    evaluate_forecasts(main         = main3,                        forecasts_ids = forecasts_ids)      plot_forecast_ts(main = main1)    plot_forecast_point(main = main1)    plot_forecasts_error_lead(main = main1)    plot_forecasts_cov_RMSE(main    = main1,                             models  = \"AutoArima\",                             species = \"DM\")     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/portalcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast Portal Rodents Models — portalcast","title":"Forecast Portal Rodents Models — portalcast","text":"Forecast Portal rodent populations using data models portalcasting directory. portalcast wraps around cast allow multiple runs model - dataset - species combinations. returns saves model combinations table fit success added column.cast runs single forecast single model one species one dataset. make_model_combinations translates model controls data.frame model, dataset, species columns, row combination.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Portal Rodents Models — portalcast","text":"","code":"portalcast(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   species = prefab_species(main = main) )  cast(main = \".\", dataset, species, model)  make_model_combinations(   main = \".\",   models = prefab_models(),   datasets = prefab_datasets(),   species = prefab_species(main = main) )"},{"path":"https://weecology.github.io/portalcasting/reference/portalcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Portal Rodents Models — portalcast","text":"main character value name main component directory tree. models, model character vector name(s) model(s) include forecast. cast, model can length-one. datasets, dataset character vector datasets forecast. cast, dataset can length-one. species character vector species forecast. cast, species can length-one. See rodent_species.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast Portal Rodents Models — portalcast","text":"portalcast: data.frame model combinations logical column added fit success, invisible-ly. cast: list model outputs process_model_output. make_model_combinations: data.frame model combinations.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/portalcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast Portal Rodents Models — portalcast","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"portalcast\")    setup_dir(main = main1)     make_model_combinations(main = main1)    portalcast(main = main1, models = \"AutoArima\")    cast(main = main1, model = \"AutoArima\", dataset = \"controls\", species = \"DM\")     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-selection-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection Helper Functions for the Portalcasting App — portalcasting app selection helpers","title":"Selection Helper Functions for the Portalcasting App — portalcasting app selection helpers","text":"Construct vectors available choices make selections, respect species, dataset, model, moons.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-selection-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection Helper Functions for the Portalcasting App — portalcasting app selection helpers","text":"","code":"available_newmoonnumbers(   global = global_list(),   event = \"initial_evaluation_tab\",   rv = NULL )  selected_newmoonnumber(   global = global_list(),   event = \"initial_evaluation_tab\",   rv = NULL )  available_historic_end_newmoonnumbers(   global = global_list(),   event = \"initial_forecast_tab\",   rv = NULL )  selected_historic_end_newmoonnumber(   global = global_list(),   event = \"initial_forecast_tab\",   rv = NULL )  available_species(   global = global_list(),   event = \"initial_forecast_tab\",   rv = NULL )  selected_species(   global = global_list(),   event = \"initial_forecast_tab\",   rv = NULL )  available_datasets(   global = global_list(),   event = \"initial_forecast_tab\",   rv = NULL )  selected_dataset(   global = global_list(),   event = \"initial_forecast_tab\",   rv = NULL )  available_models(   global = global_list(),   event = \"initial_forecast_tab\",   rv = NULL )  selected_model(   global = global_list(),   event = \"initial_forecast_tab\",   rv = NULL )"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-selection-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection Helper Functions for the Portalcasting App — portalcasting app selection helpers","text":"global list global values app. event character value server event.  Options include \"initial_forecast_tab\", \"initial_evaluation_tab\", \"forecast_tab_species\", \"forecast_tab_dataset\", \"forecast_tab_model\", \"forecast_tab_historic_end_newmoonnumber\", \"evaluation_tab_species\", \"evaluation_tab_dataset\", \"evaluation_tab_model\", \"evaluation_tab_historic_end_newmoonnumber\", \"evaluation_tab_newmoonnumber\") rv reactiveValues list UI.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-selection-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection Helper Functions for the Portalcasting App — portalcasting app selection helpers","text":"character integer, depending upon function.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-selection-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selection Helper Functions for the Portalcasting App — portalcasting app selection helpers","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"app_helpers\")    setup_dir(main = main1)     gl <- global_list(main = main1)     ft_species                    <- gl$initial_forecast_tab_selected_species    ft_dataset                    <- gl$initial_forecast_tab_selected_species    ft_model                      <- gl$initial_forecast_tab_selected_species    ft_historic_end_newmoonnumber <- gl$initial_forecast_tab_selected_historic_end_newmoonnumber    et_species                    <- gl$initial_forecast_tab_selected_species    et_dataset                    <- gl$initial_forecast_tab_selected_species    et_model                      <- gl$initial_forecast_tab_selected_species    et_historic_end_newmoonnumber <- gl$initial_forecast_tab_selected_historic_end_newmoonnumber    et_newmoonnumber              <- gl$initial_forecast_tab_selected_newmoonnumber     rv <- list(forecast_tab_species                      = ft_species,               forecast_tab_dataset                      = ft_dataset,               forecast_tab_model                        = ft_model,               forecast_tab_historic_end_newmoonnumber   = ft_historic_end_newmoonnumber,               evaluation_tab_species                    = et_dataset,               evaluation_tab_dataset                    = et_species,               evaluation_tab_model                      = et_model,               evaluation_tab_historic_end_newmoonnumber = et_historic_end_newmoonnumber,               evaluation_tab_newmoonnumber              = et_newmoonnumber)     available_models(global = gl,                      event  = \"initial_forecast_tab\")    selected_model(global   = gl,                    event    = \"initial_forecast_tab\",                    rv         = rv1)     available_datasets(global = gl,                        event  = \"initial_forecast_tab\")    selected_dataset(global   = gl,                      event    = \"initial_forecast_tab\",                      rv       = rv1)     available_species(global  = gl,                       event   = \"initial_forecast_tab\")    selected_species(global   = gl,                      event    = \"initial_forecast_tab\",                      rv       = rv1)     available_historic_end_newmoonnumbers(global = gl,                                           event  = \"initial_forecast_tab\")    selected_historic_end_newmoonnumber(global   = gl,                                         event    = \"initial_forecast_tab\",                                         rv       = rv1)     available_newmoonnumbers(global = gl,                              event  = \"initial_evaluation_tab\")    selected_newmoonnumber(global   = gl,                            event    = \"initial_evaluation_tab\",                            rv       = rv1)     unlink(main1, recursive = TRUE)  }"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-server.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the Server Code for the Web App — portalcasting app server","title":"Generate the Server Code for the Web App — portalcasting app server","text":"Generate Server Code Web App","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the Server Code for the Web App — portalcasting app server","text":"","code":"app_events()  app_server(input, output, session)  initial_reactive_values(global = global_list())  initial_output(main = \".\", global, rv, output)  event_reaction(main, global, event, rv, input, output, session)  update_reactive_values(event, rv, input)  update_output(main, global, event, rv, input, output)  update_input(global, event, rv, input, session)"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the Server Code for the Web App — portalcasting app server","text":"input input list UI. output output list UI. session Environment UI. global list global values app. main character value name main component directory tree. rv reactiveValues list UI. event character value server event.  Options managed app_events -- currently including \"forecast_tab_species\", \"forecast_tab_dataset\", \"forecast_tab_model\", \"forecast_tab_historic_end_newmoonnumber\", \"evaluation_tab_species\", \"evaluation_tab_dataset\", \"evaluation_tab_model\", \"evaluation_tab_historic_end_newmoonnumber\")","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the Server Code for the Web App — portalcasting app server","text":"app_server: observer reference class object (see observeEvent observe). initial_reactive_values: reactiveValues  list. initial_output: output  list. event_reaction: updates rv, output, input  lists, return , per se. update_reactive_values: reactiveValues  list. update_output: output  list. update_input: updates input  list, return . app_events: character vector event names.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the Server Code for the Web App — portalcasting app server","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"app\")    setup_dir(main = main1)     global <- global_list(main = main1)      rv     <- initial_reavtive_values(global = global)     output <- initial_output(main   = main1,                             global = global,                             rv     = rv,                             output = list())     unlink(main1, recursive = TRUE)  }"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the User Interface for the Web App — portalcasting app ui","title":"Generate the User Interface for the Web App — portalcasting app ui","text":"app_ui constructs user interface (UI) web application updating static pages (models rodent profiles) running fluidPage UI components. write_rodent_profiles_tab_html write_model_tab_html build write-static html files rodent profiles models tabs fill_app.  <_>_href functions provide simplified calls hyperlinked texts repeatedly used.  See Details hierarchy functions.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the User Interface for the Web App — portalcasting app ui","text":"","code":"app_ui(global = global_list())  app_theme()  main_panel(global = global_list())  title_panel()  subtitle_panel()  about_tab(global = global_list())  models_tab(global = global_list())  rodents_profiles_tab(global = global_list())  forecast_tab(global = global_list())  forecast_tab_input_selection_checks_row()  forecast_tab_input_selection_row(global = global_list())  forecast_tab_input_selection_row_species(global = global_list())  forecast_tab_input_selection_row_dataset(global = global_list())  forecast_tab_input_selection_row_model(global = global_list())  forecast_tab_input_selection_row_historic_end_newmoonnumber(   global = global_list() )  evaluation_tab(global = global_list())  evaluation_tab_input_selection_checks_row()  evaluation_tab_input_selection_row(global = global_list())  evaluation_tab_input_selection_row_species(global = global_list())  evaluation_tab_input_selection_row_dataset(global = global_list())  evaluation_tab_input_selection_row_model(global = global_list())  evaluation_tab_input_selection_row_historic_end_newmoonnumber(   global = global_list() )  evaluation_tab_input_selection_row_newmoonnumber(global = global_list())  covariates_tab(global = global_list())  data_sources_section()  portal_project_href(text = \"The Portal Project\")  portal_data_href(text = \"The Portal Data Repository\")  portal_weather_href(text = \"weather data\")  portal_ndvi_href(text = \"NDVI data\")  write_rodents_profiles_tab_html(main = \".\")  write_models_tab_html(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the User Interface for the Web App — portalcasting app ui","text":"global list global values app. text character value text used htmltools::. main character value name main component directory tree.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the User Interface for the Web App — portalcasting app ui","text":"UI definition, component shiny tags, bootswatch theme.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate the User Interface for the Web App — portalcasting app ui","text":"UI hierarchical built : app_ui title_panel subtitle_panel main_panel forecast_tab forecast_tab_input_selection_row forecast_tab_input_selection_row_species forecast_tab_input_selection_row_dataset forecast_tab_input_selection_row_model forecast_tab_input_selection_row_historic_end_newmoonnumber forecast_tab_input_selection_checks_row  # commented , available checking reactive inputs dev plot_forecast_ts plot_forecast_point evaluation_tab evaluation_tab_input_selection_row evaluation_tab_input_selection_row_species evaluation_tab_input_selection_row_dataset evaluation_tab_input_selection_row_model evaluation_tab_input_selection_row_historic_end_newmoonnumber evaluation_tab_input_selection_row_newmoonnumber evaluation_tab_input_selection_checks_row  # commented , available checking reactive inputs dev plot_forecast_point plot_forecasts_cov_RMSE about_tab htmltools::includeMarkdown models_tab htmltools::includeHTML rodents_profiles_tab htmltools::includeHTML covariates_tab data_sources_section","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app-ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the User Interface for the Web App — portalcasting app ui","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"app_ui\")    setup_dir(main = main1)     global <- global_list(main = main1)      app_ui(global = global)    title_panel( )    subtitle_panel( )    main_panel(global = global)    forecast_tab(global = global)    forecast_tab_input_selection_row(global = global)    forecast_tab_input_selection_row_species(global = global)    forecast_tab_input_selection_row_dataset(global = global)    forecast_tab_input_selection_row_model(global = global)    forecast_tab_input_selection_row_historic_end_newmoonnumber(global = global)    forecast_tab_input_selection_checks_row( )    evaluation_tab(global = global)    evaluation_tab_input_selection_row(global = global)    evaluation_tab_input_selection_row_species(global = global)    evaluation_tab_input_selection_row_dataset(global = global)    evaluation_tab_input_selection_row_model(global = global)    evaluation_tab_input_selection_row_historic_end_newmoonnumber(global = global)    evaluation_tab_input_selection_row_newmoonnumber(global = global)    evaluation_tab_input_selection_checks_row( )    about_tab( )    models_tab(global = global)    rodents_profiles_tab(global = global)    covariates_tab(global = global)    data_sources_section( )     unlink(main1, recursive = TRUE)  }"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and Launch the Portal Forecast Web Application — portalcasting app","title":"Build and Launch the Portal Forecast Web Application — portalcasting app","text":"run_app constructs launches local version web application running shiny::runApp pointed app subdirectory local portalcasting package folder. global_list creates list values globally available app run.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and Launch the Portal Forecast Web Application — portalcasting app","text":"","code":"run_app(main = \".\")  global_list(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build and Launch the Portal Forecast Web Application — portalcasting app","text":"main character value name main component directory tree.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build and Launch the Portal Forecast Web Application — portalcasting app","text":"global_list: list values globally available app. run_app runs app .","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build and Launch the Portal Forecast Web Application — portalcasting app","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"app\")    setup_dir(main = main1)     global_list(main = main1)     if (getShinyOption(\"shiny.launch.browser\", FALSE)) {      run_app(main = main1)    }     unlink(main1, recursive = TRUE)  }"},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-package.html","id":null,"dir":"Reference","previous_headings":"","what":"portalcasting: Functions Used in Predicting Portal Rodent Dynamics — portalcasting-package","title":"portalcasting: Functions Used in Predicting Portal Rodent Dynamics — portalcasting-package","text":"Create directory, populate data, build models, forecast rodent populations, visualize results. package provides functionality underlying Portal Predictions Project continuous integration system https://github.com/weecology/portalpredictions website https://portal.naturecast.org well support exploring developing new models sandbox environments.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/portalcasting-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"portalcasting: Functions Used in Predicting Portal Rodent Dynamics — portalcasting-package","text":"Maintainer: Juniper L. Simonis juniper.simonis@weecology.org (ORCID) Authors: Glenda M. Yenni (ORCID) Ellen K. Bledsoe (ORCID) Erica M. Christensen (ORCID) Patricia K. T. Dumandan (ORCID) Henry Senyondo (ORCID) Hao Ye (ORCID) Ethan P. White (ORCID) S. K. Morgan Ernest (ORCID)","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-models.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide the Names or Controls for the Prefabricated Models — prefabricated models","title":"Provide the Names or Controls for the Prefabricated Models — prefabricated models","text":"Create character vector names pre-fabricated (prefab) models list controls.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide the Names or Controls for the Prefabricated Models — prefabricated models","text":"","code":"prefab_models_controls()  prefab_models()"},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide the Names or Controls for the Prefabricated Models — prefabricated models","text":"prefab_models: character vector model names. prefab_models_controls: list model controls.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide the Names or Controls for the Prefabricated Models — prefabricated models","text":"","code":"prefab_models_controls( )   prefab_models( )"},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-rodents-datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide the Names or Controls for the Prefabricated Rodent Datasets — prefabricated rodents datasets","title":"Provide the Names or Controls for the Prefabricated Rodent Datasets — prefabricated rodents datasets","text":"Create character vector names pre-fabricated (prefab) rodent datasets species list controls","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-rodents-datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide the Names or Controls for the Prefabricated Rodent Datasets — prefabricated rodents datasets","text":"","code":"prefab_datasets()  prefab_datasets_controls()  prefab_species(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-rodents-datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide the Names or Controls for the Prefabricated Rodent Datasets — prefabricated rodents datasets","text":"main character value name main component directory tree.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-rodents-datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide the Names or Controls for the Prefabricated Rodent Datasets — prefabricated rodents datasets","text":"prefab_datasets: character vector dataset names. prefab_datasets_controls: list dataset controls. prefab_species: character vector species abbreviations.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prefabricated-rodents-datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide the Names or Controls for the Prefabricated Rodent Datasets — prefabricated rodents datasets","text":"","code":"prefab_datasets_controls( )   prefab_datasets( )"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Covariate Data for Casting — prepare covariates","title":"Prepare Covariate Data for Casting — prepare covariates","text":"Prepare combine historical forecast covariate data model run, according directory_settings.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Covariate Data for Casting — prepare covariates","text":"","code":"prepare_covariates(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Covariate Data for Casting — prepare covariates","text":"main character value name main component directory tree.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Covariate Data for Casting — prepare covariates","text":"data.frame historical forecasted covariates also saved settings$files$covariates indicated settings$save.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/prepare-covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Covariate Data for Casting — prepare covariates","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"covariates\")     create_dir(main = main1)    fill_resources(main = main1)    fill_forecasts(main = main1)    fill_fits(main = main1)    fill_models(main = main1)     prepare_newmoons(main   = main1)    prepare_rodents(main    = main1)     prepare_covariates(main = main1)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a Model-Running Metadata List — prepare metadata","title":"Prepare a Model-Running Metadata List — prepare metadata","text":"Sets metadata list used forecasting, particular matching time period across datasets, according directory_settings.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a Model-Running Metadata List — prepare metadata","text":"","code":"prepare_metadata(   main = \".\",   datasets = prefab_datasets(),   new_datasets_controls = NULL )"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a Model-Running Metadata List — prepare metadata","text":"main character value name main component directory tree. datasets character vector name(s) dataset(s) include. new_datasets_controls list controls new datasets (prefab datasets) listed datasets added control list file.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a Model-Running Metadata List — prepare metadata","text":"list forecasting metadata, also saved YAML file (.yaml) desired.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/prepare-metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a Model-Running Metadata List — prepare metadata","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"metadata\")     create_dir(main = main1)    fill_resources(main = main1)    fill_forecasts(main = main1)    fill_fits(main = main1)    fill_models(main = main1)     prepare_newmoons(main   = main1)    prepare_rodents(main    = main1)     prepare_covariates(main = main1)    prepare_metadata(main   = main1)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-models.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Portalcasting Models — prepare models","title":"Prepare Portalcasting Models — prepare models","text":"Add model controls scripts portalcasting directory read controls model names.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Portalcasting Models — prepare models","text":"","code":"write_models_controls(   main = \".\",   new_models_controls = NULL,   models = prefab_models() )  write_models_scripts(main = \".\", controls = prefab_models_controls())  read_models_controls(main = \".\")  models_controls(main = \".\", models = prefab_models())"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Portalcasting Models — prepare models","text":"main character value name main component directory tree. new_models_controls list controls new models (prefab models) listed models added control list file. models character vector name(s) model(s) include. controls list controls models.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Portalcasting Models — prepare models","text":"model_controls: list models' control lists, invisible-ly. read_models_controls: list models' control lists, file defined directory_settings, invisible-ly. write_models_controls: list models' control lists, invisible-ly. write_models_scripts: NULL, invisible-ly.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/prepare-models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Portalcasting Models — prepare models","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"models\")     create_dir(main = main1)    fill_resources(main = main1)    fill_forecasts(main = main1)    fill_fits(main = main1)     controls <- write_models_controls(main = main1)    write_models_scripts(main     = main1,                        controls = controls)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-newmoons.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Lunar Data for the Portalcasting Repository — prepare newmoons","title":"Prepare Lunar Data for the Portalcasting Repository — prepare newmoons","text":"Get time information (calendar dates, census periods, newmoon numbers) associated trapping events (achieved missed) based lunar survey schedule. add_forecast_newmoons adds future newmoon dates newmoon table prepare_newmoons associated forecast.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-newmoons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Lunar Data for the Portalcasting Repository — prepare newmoons","text":"","code":"prepare_newmoons(main = \".\")  add_forecast_newmoons(main = \".\", newmoons = NULL)"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-newmoons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Lunar Data for the Portalcasting Repository — prepare newmoons","text":"main character value name main component directory tree. newmoons data.frame newmoon data.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-newmoons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Lunar Data for the Portalcasting Repository — prepare newmoons","text":"version newmoons data.frame. prepare_newmoons: fully appended formatted data.frame (also saved settings$save = TRUE). add_forecast_newmoons: fully appended formatted data.frame.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/prepare-newmoons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Lunar Data for the Portalcasting Repository — prepare newmoons","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"newmoons\")     create_dir(main = main1)    fill_resources(main = main1)    fill_forecasts(main = main1)    fill_fits(main = main1)    fill_models(main = main1)     prepare_newmoons(main = main1)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-rodents.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Rodents Data for Forecasting — prepare rodents","title":"Prepare Rodents Data for Forecasting — prepare rodents","text":"prepare_dataset workhorse function creating portalcasting rodent datasets using existing functions.  Wraps around portalr::summarize_rodent_data produce data.frame associated set data specifications. Inputs ready implementation via prepare_rodents. prepare_rodents creates specified datasets using associated function (typically prepare_dataset) arguments, according directory_settings. prepare_abundance creates model-ready vector abundances fitting casting, according model's requirements time settings.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-rodents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Rodents Data for Forecasting — prepare rodents","text":"","code":"prepare_abundance(main = \".\", dataset = NULL, species = NULL, model = NULL)  prepare_rodents(   main = \".\",   datasets = prefab_datasets(),   new_datasets_controls = NULL )  prepare_dataset(   name = \"all\",   main = \".\",   filename = \"rodents_all.csv\",   clean = FALSE,   level = \"Site\",   type = \"Rodents\",   plots = \"all\",   unknowns = FALSE,   shape = \"crosstab\",   time = \"newmoon\",   output = \"abundance\",   fillweight = FALSE,   treatment = NULL,   na_drop = FALSE,   zero_drop = FALSE,   min_traps = 1,   min_plots = 24,   effort = TRUE,   species = prefab_species(main = main),   total = TRUE,   save = TRUE )  read_datasets_controls(main = \".\")  datasets_controls(main = \".\", datasets = prefab_datasets())  write_datasets_controls(   main = \".\",   new_datasets_controls = NULL,   datasets = prefab_datasets() )"},{"path":"https://weecology.github.io/portalcasting/reference/prepare-rodents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Rodents Data for Forecasting — prepare rodents","text":"main character value name main component directory tree. dataset, datasets character value(s) name(s) rodent dataset(s) include. species character-valued vector species names include. model character value model name. new_datasets_controls Optional list controls new datasets. See datasets_controls. name character name given dataset. filename character value file saving output. clean logical indicator rodent data passed QA/QC (clean = TRUE) data (clean = FALSE) loaded. level character indicating type summary: \"Plot\", \"Treatment\", \"Site\". Pipes directly portalr::summarize_rodent_data. type character value rodent data set type, according pre-existing definitions. alternative toggle species.  Either species (type = \"Rodents\") granivoes (type = \"Granivores\"). plots Specification subset plots. Can vector numeric plots indicators specific sets indicated character values: \"\" plots \"Longterm\" plots (plots treatment entire time series). unknowns logical indicator either remove individuals identified species (unknowns = FALSE) sum additional column (unknowns = TRUE. shape character value indicating \"crosstab\" \"flat\" output. time character value specifying format time index output. Options \"period\" (sequential Portal surveys), \"newmoon\" (lunar cycle numbering), \"date\" (calendar date).  default time = \"newmoon\" produces equispaced observation timestep, common format format discrete-time modeling. output character indicating type data: \"abundance\", \"biomass\", \"energy\". fillweight logical specifier whether fill unknown weights records individual species, possible. treatment character indicating specific treatment(s) trim level = \"Treatment\": \"control\", \"exclosure\", \"removal\", \"spectabs\" na_drop logical indicator NA values (representing insufficient sampling) dropped. zero_drop logical indicator 0 values (representing sufficient sampling detection) dropped. min_traps integer (integer numeric) minimum number traps collected plot used. min_plots integer (integer numeric) minimum number plots surveyed survey used. effort logical indicator effort columns included output. total logical value indicating total (sum across species added . available one species included. save logical indicator controlling output saved .","code":""},{"path":"https://weecology.github.io/portalcasting/reference/prepare-rodents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Rodents Data for Forecasting — prepare rodents","text":"prepare_dataset: data.frame specified dataset. prepare_rodents: list data.frames specified datasets. prepare_abundance: numeric vector abundance data corresponding time articulated metadata file. Missing values interpolated requested via model controls. read_datasets_controls, write_datasets_controls, datasets_controls: list datasets' control lists, invisible-ly write_datasets_controls.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/prepare-rodents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Rodents Data for Forecasting — prepare rodents","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"rodents\")     create_dir(main = main1)    fill_resources(main = main1)    fill_forecasts(main = main1)    fill_fits(main = main1)    fill_models(main = main1)     prepare_newmoons(main   = main1)    prepare_rodents(main    = main1)      write_datasets_controls(main = main1)    read_datasets_controls(main = main1)    datasets_controls(main = main1)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/process-forecast-output.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Save Forecast Output to Files — process forecast output","title":"Process and Save Forecast Output to Files — process forecast output","text":"Take model fit forecast output, process savable objects, save output folders.  forecast metadata file updated accordingly track saved output. add_observations_to_forecast_table appends column observations forecast's forecast tab. model interpolated data set, adds true (non-interpolated) observations model predictions compared data. select_forecasts determines forecasts match user specifications. Functionally, wrapper read_forecasts_metadata filtering specifications provides simple user interface large set available forecasts via metadata.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/process-forecast-output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Save Forecast Output to Files — process forecast output","text":"","code":"process_model_output(   main = \".\",   model_fit = NULL,   model_forecast,   model,   dataset,   species )  read_forecast_table(main = \".\", forecast_id = NULL)  read_forecasts_tables(main = \".\", forecasts_ids = NULL)  add_observations_to_forecast_table(main = \".\", forecast_table = NULL)  read_forecast_metadata(main = \".\", forecast_id = NULL)  read_model_fit(main = \".\", forecast_id = NULL)  read_model_forecast(main = \".\", forecast_id = NULL)  select_forecasts(   main = \".\",   forecasts_metadata = NULL,   forecasts_ids = NULL,   forecasts_groups = NULL,   models = NULL,   datasets = NULL,   species = NULL,   historic_end_newmoonnumbers = NULL )  read_forecasts_metadata(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/process-forecast-output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Save Forecast Output to Files — process forecast output","text":"main character value name main component directory tree. model_fit, model_forecast Output model's fit forecast functions. model, models character values name(s) model(s) interest, indexed within directory forecasts sub folder. See forecasts metadata file (forecasts_metadata.csv) summary information. NULL (default), recently generated forecast's output read . models can NULL, one value, one values, model can NULL one value. dataset, datasets character vector rodent dataset name(s) include. datasets can NULL, one value, one values, dataset can NULL one value. species character value species codes (\"total\" total across species) include. Default value NULL, equates selection respect species. forecast_id, forecasts_ids integer (integer numeric) value(s) representing forecast(s) interest, indexed within directory casts sub folder. See forecasts metadata file (forecasts_metadata.csv) summary information. NULL (default), recently generated forecast's output read . forecasts_ids can NULL, one value, one values, forecast_id can NULL one value. forecast_table data.frame cast's output. See read_forecast_table. forecasts_metadata data.frame forecast metadata. NULL (default), try read via read_forecasts_metadata. forecasts_groups integer (integer numeric) value forecast groups include. Default value NULL, equates selection respect forecast_group. historic_end_newmoonnumbers integer (integer numeric) newmoon numbers forecast origin. Default value NULL, equates selection.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/process-forecast-output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Save Forecast Output to Files — process forecast output","text":"process_model_output: relevant elements saved external files, returned list. read_forecast_table: forecast table data.frame. read_forecast_tables: data.frame combined forecast tables. add_observations_to_forecast_table: forecast table data.frame observation column added. read_forecast_metadata: list forecast_metadata. read_model_fit: forecast output (typically list). read_model_forecast: forecast output (typically list). select_forecasts:  data.frame selected forecasts' metadata. read_forecasts_metadata: data.frame forecasts' metadata.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/process-forecast-output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process and Save Forecast Output to Files — process forecast output","text":"Four model-specific output components saved returned: * forecast_metadata: saved write_yaml. * forecast_tab: saved using write_csv_arrow. * model_fit: saved serialized JSON file via serializeJSON read_json, quite flexible respect specific object structure. * model_forecast: saved serialized JSON file via serializeJSON read_json, quite flexible respect specific object structure.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/process-forecast-output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Save Forecast Output to Files — process forecast output","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"forecast_output\")     setup_dir(main = main1)    dataset <- \"all\"    species <- \"DM\"    model   <- \"AutoArima\"      abundance      <- prepare_abundance(main    = main1,                                        dataset = dataset,                                        species = species,                                        model   = model)    model_controls <- models_controls(main      = main1,                                      models    = model)[[model]]    metadata       <- read_metadata(main        = main1)    newmoons       <- read_newmoons(main        = main1)                                            covariates     <- read_covariates(main      = main1)      fit_args  <- named_null_list(element_names = names(model_controls$fit$args))    for (i in 1:length(fit_args)) {      fit_args[[i]] <- eval(parse(text = model_controls$fit$args[i]))    }    model_fit  <- do.call(what = model_controls$fit$fun,                          args = fit_args)        forecast_args  <- named_null_list(element_names = names(model_controls$forecast$args))    for (i in 1:length(forecast_args)) {      forecast_args[[i]] <- eval(parse(text = model_controls$forecast$args[i]))    }      model_forecast <- do.call(what = model_controls$forecast$fun,                              args = forecast_args)      process_model_output(main           = main1,                         model_fit      = model_fit,                         model_forecast = model_forecast,                         model          = model,                         dataset        = dataset,                         species        = species)      cast_table     <- read_forecast_table(main = main1)    cast_table2    <- add_observations_to_forecast_table(main = main1,                                                         forecast_table = cast_table)    cast_tables    <- read_forecast_tables(main = main1)    cast_metadata  <- read_forecast_metadata(main = main1)    cast_forecast  <- read_model_forecast(main = main1)     casts_metadata <- read_forecasts_metadata(main = main1)    select_forecasts(main = main1)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/read-write-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read from and Write to a Data File — read write data","title":"Read from and Write to a Data File — read write data","text":"Generalized data input-output functionality specifics common files. write_data saves inputted data data file requested returns console, invisible-ly. Currently available yaml, csv, json file extensions. read_data reads specified data file. Specific functions available include read_rodents, read_rodents_dataset, read_covariates, read_climate_forecasts, read_newmoons, read_metadata.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/read-write-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read from and Write to a Data File — read write data","text":"","code":"write_data(   x = NULL,   main = \".\",   subdirectory = \"data\",   save = TRUE,   overwrite = TRUE,   filename = NULL,   quiet = FALSE )  read_data(   main = \".\",   data_name = NULL,   dataset = \"all\",   datasets = prefab_datasets() )  read_rodents_dataset(main = \".\", dataset = \"all\")  read_rodents(main = \".\", datasets = prefab_datasets())  read_newmoons(main = \".\")  read_covariates(main = \".\")  read_metadata(main = \".\")  read_climate_forecasts(main = \".\")"},{"path":"https://weecology.github.io/portalcasting/reference/read-write-data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read from and Write to a Data File — read write data","text":"x Data, data.frame list, written . main character value name main component directory tree. subdirectory character value defining data subdirectory portalcasting directory tree. save logical indicator controlling x saved . overwrite logical indicator whether file writing occur even local copy already exists. filename character name file saving x. quiet logical indicator messages quieted. data_name character representation data needed. Current options include \"rodents\", \"rodents_table\", \"covariates\", \"climate_forecasts\", \"newmoons\", \"metadata\". dataset, datasets character grouping name(s) used define rodents. Standard options \"\", \"controls\", \"exclosures\". dataset can length 1, datasets restricted length.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/read-write-data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read from and Write to a Data File — read write data","text":"write_data: x input, invisible-ly. read_data:  data requested, typically data.frame list.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/read-write-data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read from and Write to a Data File — read write data","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"io\")    setup_dir(main = main1)     write_data(main     = main1,                x        = data.frame(rnorm(10)),                filename = \"xx.csv\")     read_data(main = main1)    read_rodents(main = main1)    read_rodents_dataset(main = main1)    read_covariates(main = main1)    read_climate_forecasts(main = main1)    read_newmoons(main = main1)    read_metadata(main = main1)     unlink(main1, force = TRUE, recursive = TRUE)  }"},{"path":"https://weecology.github.io/portalcasting/reference/round_na.interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Round an Interpolated Series — round_na.interp","title":"Round an Interpolated Series — round_na.interp","text":"Wraps round around forecast::na.interp provide rounded interpolated series, enforced greater equal minimum value (default min_val = 0) via pmax.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/round_na.interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round an Interpolated Series — round_na.interp","text":"","code":"round_na.interp(   x,   lambda = NULL,   linear = (frequency(x) <= 1 | sum(!is.na(x)) <= 2 * frequency(x)),   digits = 0,   min_val = 0 )"},{"path":"https://weecology.github.io/portalcasting/reference/round_na.interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round an Interpolated Series — round_na.interp","text":"x time series passed directly forecast::na.interp. lambda Box-Cox transformation parameter passed directly forecast::na.interp. linear logical indicator linear interpolation used. Passed directly forecast::na.interp. digits integer numeric integer many digits round . Passed directly round. min_val integer numeric integer minimum value allowable series.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/round_na.interp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round an Interpolated Series — round_na.interp","text":"numeric series.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/round_na.interp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round an Interpolated Series — round_na.interp","text":"","code":"round_na.interp(x = c(1, 2, 3, NA, NA, 170))    round_na.interp(x = c(-1, 2, 3, NA, NA, 170), min_val = 1)"},{"path":"https://weecology.github.io/portalcasting/reference/runjags-models.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Run a runjags Portalcasting Model — runjags models","title":"Create and Run a runjags Portalcasting Model — runjags models","text":"Using runjags (Denwood 2016) package produce JAGS-based forecasts. fit_runjags: Wraps runjags model object preparation functions model running (run.jags function runjags (Denwood 2016) package) use run JAGS (Plummer 2003) models portalcasting. runjags_data, runjags_monitor, runjags_model, runjags_inits: Produce model-specific components named. forecast.runjags: convenience function extracting existing forecasts runjags objects summarizing \"forecast\"-class object. runjags_controls: Combines run.jags control parameters users may interested changing portalcasting-specific parameters control list input specific model functions.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/runjags-models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Run a runjags Portalcasting Model — runjags models","text":"","code":"runjags_inits(inits)  runjags_model(model_file)  runjags_monitors(monitors, metadata)  runjags_data(data_names, abundance, metadata, covariates)  fit_runjags(   abundance,   metadata,   covariates,   monitors,   inits,   model_file,   data_names,   control_runjags = runjags_controls() )  # S3 method for runjags forecast(object, h, level, nsamples, seed = NULL, ...)  runjags_controls(   nchains = 4,   adapt = 10000,   burnin = 10000,   sample = 10000,   thin = 10,   modules = \"glm\",   method = \"interruptible\",   factories = \"\",   mutate = NA,   silent_jags = FALSE )"},{"path":"https://weecology.github.io/portalcasting/reference/runjags-models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and Run a runjags Portalcasting Model — runjags models","text":"inits list model parameter initializer functions. See prefab_models_controls. model_file character value model file name. See prefab_models_controls. monitors character vector parameters track. Forecasted observations state variables tracked automatically. metadata list model control elements. See prepare_metadata. data_names character vector data values include data list. See prefab_models_controls. abundance Non-negative integer-conformable vector rodent abundances use forecasting. See prepare_abundance. covariates data.frame covariates used modeling. See prepare_covariates. control_runjags list controls running runjags models. See runjags_controls. Optional. provided , taken model controls list. object runjags-class object columns \"X\" values (state variables) mcmc element. h integer-conformable number steps forward include forecast. level numeric confidence level use summarizing predictions. nsamples integer (integer numeric) number samples used summarizing model output sample-based estimates. seed single integer-conformable value NULL set set.seed. ... Additional parameters nchains Non-negative integer-conformable value number parallel chains use. See run.jags. adapt Non-negative integer-conformable value number adaptation steps use. See run.jags. burnin Non-negative integer-conformable value number burnin steps use. See run.jags. sample Non-negative integer-conformable value number sampling steps use. See run.jags. thin Positive integer-conformable value thinning interval use. See run.jags. modules character vector external modules add JAGS. See run.jags. method character value run.jags method use. Options include \"rjags\", \"simple\", \"interruptible\", \"parallel\", \"rjparallel\", \"background\", \"bgparallel\", \"snow\". See run.jags. factories character vector factory modules add JAGS. See run.jags. mutate function list (first element function) used add variables posterior chain (rather throughout sampling). See run.jags. silent_jags logical value quieting output runjags function, including underlying JAGS output.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/runjags-models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Run a runjags Portalcasting Model — runjags models","text":"fit_runjags: object class \"runjags\" model components. See run.jags. runjags_data: list model-specific data use run.jags. runjags_monitor: vector model-specific character values parameters track run.jags. runjags_model: single character value JAGS model block run.jags. runjags_inits: function takes argument data produce chain-specific initial values run.jags. runjags_controls: list controls. forecast.runjags: list \"forecast\"-class named elements including \"mean\", \"lower\", \"upper\", \"level\".","code":""},{"path":"https://weecology.github.io/portalcasting/reference/runjags-models.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create and Run a runjags Portalcasting Model — runjags models","text":"Denwood, M. J. 2016. runjags: R package providing interface utilities, model templates, parallel computing methods additional distributions MCMC models JAGS. Journal Statistical Software, 71:9. URL. Plummer, M. 2003. JAGS: program analysis Bayesian graphical models using Gibbs Sampling. Proceedings 3rd International Workshop Distributed Statistical Computing (DSC 2003). ISSN 1609-395X.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/runjags-models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and Run a runjags Portalcasting Model — runjags models","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"runjags\")     setup_dir(main = main1)    dataset    <- \"all\"    species    <- \"DM\"    model      <- \"jags_RW\"    model_file <- gsub(\"'\", \"\",                       models_controls(main1)[[model]]$fit$full_model_file)      abundance      <- prepare_abundance(main    = main1,                                        dataset = dataset,                                        species = species,                                        model   = model)    model_controls <- models_controls(main       = main1,                                      models     = model)[[model]]    metadata       <- read_metadata(main        = main1)    newmoons       <- read_newmoons(main        = main1)                                            covariates     <- read_covariates(main      = main1)    control_runjags <- runjags_controls(nchains = 3,                                         adapt   = 1e3,                                         burnin  = 1e3,                                         sample  = 1e3,                                         thin    = 1)    data_names      <- c(\"count\", \"N\", \"log_mean_count\")     runjags_model(model_file = model_file)     runjags_monitors(monitors = c(\"mu\", \"sigma\"),                     metadata = metadata)     data <- runjags_data(data_names = data_names,                         abundance  = abundance,                         metadata   = metadata,                         covariates = covariates)     runjags_inits(inits = list(mu    = rnorm(1, mean = data$log_mean_count, sd = 0.1),                               sigma = runif(1, min  = 0.01, max = 0.5)))     fit <- fit_runjags(abundance       = abundance,                        metadata        = metadata,                       covariates      = covariates,                        monitors        = c(\"mu\", \"sigma\"),                        inits           = list(mu    = rnorm(1, data$log_mean_count, 0.1),                                              sigma = runif(1, 0.01, 0.5)),                        model_file      = model_file,                       data_names      = data_names,                       control_runjags = control_runjags)      forecast(object   = fit,               h        = metadata$time$lead_time_newmoons,                level    = metadata$confidence_level,                nsamples = metadata$nsamples)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/tsglm-models.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, Run, and Forecast Multi-model Inference TSGLM Model Runs — tsglm models","title":"Create, Run, and Forecast Multi-model Inference TSGLM Model Runs — tsglm models","text":"Using tscount (Liboschik et al. 2017) package forecast time series counts. meta_tsglm: Combines model running covariate preparation functions multi-model tsglm (tscount (Liboschik et al. 2017) package) model. forecast.tsglm: wrapper around predict function tsglm objects produces \"forecast\"-class object.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/tsglm-models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, Run, and Forecast Multi-model Inference TSGLM Model Runs — tsglm models","text":"","code":"meta_tsglm(   ts,   model,   distr,   link,   lag,   submodels,   covariates,   metadata,   quiet = FALSE )  # S3 method for tsglm forecast(object, h, level, ...)"},{"path":"https://weecology.github.io/portalcasting/reference/tsglm-models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, Run, and Forecast Multi-model Inference TSGLM Model Runs — tsglm models","text":"ts Non-negative integer-conformable vector rodent abundances use forecasting. See prepare_abundance. model named list model linear predictors. See tsglm. distr character response distribution. See tsglm. link character link function. See tsglm. lag integer-conformable value number timesteps used bulk lagging covariates submodels. submodels list character vectors defining covariates include submodels. covariates data.frame covariates used modeling. See prepare_covariates. metadata list model control elements. See prepare_metadata. quiet logical indicator controlling messages printed. object tsglm-class object. h integer-conformable number steps forward forecast. Passed predict n.ahead. level numeric confidence level use summarizing predictions. ... Additional parameters passed predict.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/tsglm-models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, Run, and Forecast Multi-model Inference TSGLM Model Runs — tsglm models","text":"meta_tsglm: object class \"tsglm\" additional elements defining submodel lag. forecast.tsglm: list \"forecast\"-class named elements including \"mean\", \"lower\", \"upper\", \"newxreg\" (provided prediction) well elements returned predict.","code":""},{"path":"https://weecology.github.io/portalcasting/reference/tsglm-models.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create, Run, and Forecast Multi-model Inference TSGLM Model Runs — tsglm models","text":"Liboschik T., K. Fokianos, R. Fried. 2017. tscount: R Package Analysis Count Time Series Following Generalized Linear Models. Journal Statistical Software, 82:1-51. URL.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/tsglm-models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, Run, and Forecast Multi-model Inference TSGLM Model Runs — tsglm models","text":"","code":"if (FALSE) {    main1 <- file.path(tempdir(), \"metatsglm\")     setup_dir(main = main1)    dataset <- \"all\"    species <- \"DM\"    model   <- \"pevGARCH\"      abundance      <- prepare_abundance(main    = main1,                                        dataset = dataset,                                        species = species,                                        model   = model)    model_controls <- models_controls(main       = main1,                                      models     = model)[[model]]    metadata       <- read_metadata(main        = main1)    newmoons       <- read_newmoons(main        = main1)                                            covariates     <- read_covariates(main      = main1)    model          <- list(past_obs = 1, past_mean = 13)    distr          <- \"poisson\"    link           <- \"log\"    lag            <- 6    submodels      <- list(c(\"mintemp\", \"ndvi\"),                           c(\"maxtemp\"),                           c(\"meantemp\"),                           c(\"precipitation\"),                           c(NULL))     fit_tsglm      <- meta_tsglm(ts         = abundance,                                  model      = model,                                  distr      = distr,                                  link       = link,                                  lag        = lag,                                  submodels  = submodels,                                  covariates = covariates,                                  metadata   = metadata,                                  quiet      = FALSE)    newmoons_in <- match(metadata$time$forecast_newmoonnumbers - lag, covariates$newmoonnumber)    newxreg     <- covariates[newmoons_in, unlist(fit_tsglm$submodel)]     forecast(object  = fit_tsglm,                h       = metadata$time$lead_time_newmoons,                level   = metadata$confidence_level,                newxreg = newxreg)     unlink(main1, recursive = TRUE) }"},{"path":"https://weecology.github.io/portalcasting/reference/update_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a List's Elements — update_list","title":"Update a List's Elements — update_list","text":"Update list new values elements","code":""},{"path":"https://weecology.github.io/portalcasting/reference/update_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a List's Elements — update_list","text":"","code":"update_list(list = list(), ...)"},{"path":"https://weecology.github.io/portalcasting/reference/update_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a List's Elements — update_list","text":"list list updated .... ... Named elements update list","code":""},{"path":"https://weecology.github.io/portalcasting/reference/update_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a List's Elements — update_list","text":"Updated list.","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/reference/update_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a List's Elements — update_list","text":"","code":"orig_list <- list(a = 1, b = 3, c = 4)    update_list(orig_list)    update_list(orig_list, a = \"a\")    update_list(orig_list, a = 10, b = NULL)"},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-development-version","dir":"Changelog","previous_headings":"","what":"portalcasting (development version)","title":"portalcasting (development version)","text":"Version numbers follow Semantic Versioning.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0550","dir":"Changelog","previous_headings":"","what":"portalcasting 0.55.0","title":"portalcasting 0.55.0","text":"5-4-2023","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"reorganizing-the-app-pointing-0-55-0","dir":"Changelog","previous_headings":"","what":"Reorganizing the app pointing","title":"portalcasting 0.55.0","text":"Now single app.R file top level directory simplifies issue around files app replaces global.R, ui.R, server.R files","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0540","dir":"Changelog","previous_headings":"","what":"portalcasting 0.54.0","title":"portalcasting 0.54.0","text":"5-3-2023","code":""},{"path":[]},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"pointing-the-dockerfile-to-the-current-build-sha-0-54-0","dir":"Changelog","previous_headings":"","what":"Pointing the dockerfile to the current build SHA","title":"portalcasting 0.54.0","text":"Previously, using default settings remotes::install_github, actually points HEAD, testing build push docker action. fine (although great) running action tagged version releases, main branch typically --date tag , isn’t exact also means testing build PR actually still grabbing main, want. now use SHA specific event triggers build passing docker file ARG","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0530","dir":"Changelog","previous_headings":"","what":"portalcasting 0.53.0","title":"portalcasting 0.53.0","text":"4-26-2023","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0520","dir":"Changelog","previous_headings":"","what":"portalcasting 0.52.0","title":"portalcasting 0.52.0","text":"4-25-2023","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"patching-evaluations-issues-0-52-0","dir":"Changelog","previous_headings":"","what":"Patching evaluations issues","title":"portalcasting 0.52.0","text":"table big github standard, removing columns repeated content can grabbed metadata","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0511","dir":"Changelog","previous_headings":"","what":"portalcasting 0.51.1","title":"portalcasting 0.51.1","text":"4-24-2023","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0510","dir":"Changelog","previous_headings":"","what":"portalcasting 0.51.0","title":"portalcasting 0.51.0","text":"4-24-2023","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"major-updates-to-pkgdown-site-0-51-0","dir":"Changelog","previous_headings":"","what":"Major updates to pkgdown site","title":"portalcasting 0.51.0","text":"Shift bootstrap 5","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"include-ci-tests-of-examples-and-evalfalse-vignettes-0-51-0","dir":"Changelog","previous_headings":"","what":"Include CI tests of examples and eval=FALSE vignettes","title":"portalcasting 0.51.0","text":"long run time code, wrap documentation examples vignette code way prevent evaluation real-time. result, much documentation code isn’t run therefore break builds error. address , add two scripts new inst/extra_testing folder github action runner .","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"added-citation-file-0-51-0","dir":"Changelog","previous_headings":"","what":"Added CITATION file","title":"portalcasting 0.51.0","text":"Cites JOSS paper.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"bringing-the-app-code-into-the-package-0-51-0","dir":"Changelog","previous_headings":"","what":"Bringing the app code into the package","title":"portalcasting 0.51.0","text":"Improves robustness building app (includes code dependencies docker image, allows unit testing app components, etc.) Also allows users spin-local version run_web_app() pointed main","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"evaluation-figures-now-read-from-evaluations-file-0-51-0","dir":"Changelog","previous_headings":"","what":"Evaluation figures now read from evaluations file","title":"portalcasting 0.51.0","text":"Avoids computing evaluations generating plots","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"elimination-of-model-named-functions-0-51-0","dir":"Changelog","previous_headings":"","what":"Elimination of model-named functions","title":"portalcasting 0.51.0","text":"models now implemented using cast fit cast elements control lists models need new functions (meta_tsglm fit_runjags) fitting introduction forecast methods tsglm runjags objects","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"shifting-covariates-to-a-daily-level-build-initial-step-0-51-0","dir":"Changelog","previous_headings":"","what":"Shifting covariates to a daily-level build initial step","title":"portalcasting 0.51.0","text":"need shift level daily can manage newmoon split historic forecast days","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"putting-species-under-dataset-in-the-models-controls-lists-0-51-0","dir":"Changelog","previous_headings":"","what":"Putting species under dataset in the models’ controls lists","title":"portalcasting 0.51.0","text":"articulated allows finer control help avoid fitting issues, etc.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"moving-arguments-into-functionalities-0-51-0","dir":"Changelog","previous_headings":"","what":"Moving arguments into functionalities","title":"portalcasting 0.51.0","text":"cast_date argument anymore, just filled automatically dataset arguments also removed possible streamline (just pull model controls)","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"model-functions-are-now-species-level-0-51-0","dir":"Changelog","previous_headings":"","what":"Model functions are now species-level","title":"portalcasting 0.51.0","text":"facilitate lot downstream functionality, ’re breaking model functions operate species-level rather dataset-level, according new control lists Species failing nb GARCH models (s ) removed, since throws warning fits Poisson version, now fitting Poisson versions everyone.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"process_model_output-replaces-save_cast_output-and-various-model-processing-bits-0-51-0","dir":"Changelog","previous_headings":"","what":"process_model_output replaces save_cast_output and various model processing bits","title":"portalcasting 0.51.0","text":"provides much general way produce forecast can integrated system, leveraging metadata files","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"casts-metadata-table-includes-new-column-0-51-0","dir":"Changelog","previous_headings":"","what":"casts metadata table includes new column","title":"portalcasting 0.51.0","text":"species facilitate backwards compatibility, filled NA previous tables missing loaded","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"updates-to-prefab-models-to-time-steps-forward-addressing-issue-0-51-0","dir":"Changelog","previous_headings":"","what":"updates to prefab models to 13 time steps forward (addressing issue 297)","title":"portalcasting 0.51.0","text":"pevGARCH, nbGARCH, nbsGARCH get past_mean set 13 models set lead_time 13","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"new-models-0-51-0","dir":"Changelog","previous_headings":"","what":"new models","title":"portalcasting 0.51.0","text":"sAutoArima sNaiveArima pGARCH psGARCH","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"new-functions-0-51-0","dir":"Changelog","previous_headings":"","what":"new functions","title":"portalcasting 0.51.0","text":"update_dir “update-flavored” setup function","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"scoring-0-51-0","dir":"Changelog","previous_headings":"","what":"scoring","title":"portalcasting 0.51.0","text":"log crps!","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0500","dir":"Changelog","previous_headings":"","what":"portalcasting 0.50.0","title":"portalcasting 0.50.0","text":"2023-03-03","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"update-prefab_model_controlsyaml-0-50-0","dir":"Changelog","previous_headings":"","what":"Update prefab_model_controls.yaml","title":"portalcasting 0.50.0","text":"including nicer print_name rendering model texts","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0490","dir":"Changelog","previous_headings":"","what":"portalcasting 0.49.0","title":"portalcasting 0.49.0","text":"2023-02-24","code":""},{"path":[]},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0480","dir":"Changelog","previous_headings":"","what":"portalcasting 0.48.0","title":"portalcasting 0.48.0","text":"2023-02-23","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"settings-updates-to-avoid-redownloading-archive-0-48-0","dir":"Changelog","previous_headings":"","what":"Settings updates to avoid redownloading archive","title":"portalcasting 0.48.0","text":"settings overwrite now FALSE default manage version match decision making directory resources portalpredictions version updated correct value (\"latest\"; NULL) overwrite setting temporarily removed file saving functions prevent argument name confusion need external location file version compare","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"fixing-jags-model-inits-values-0-48-0","dir":"Changelog","previous_headings":"","what":"Fixing jags model inits values","title":"portalcasting 0.48.0","text":"Model values facilitating good chain mixing, updated now","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0470","dir":"Changelog","previous_headings":"","what":"portalcasting 0.47.0","title":"portalcasting 0.47.0","text":"2023-02-21","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"patching-error-in-cast-metadata-output-for-jags-models-0-47-0","dir":"Changelog","previous_headings":"","what":"Patching error in cast metadata output for jags models","title":"portalcasting 0.47.0","text":"Multiple models jags_logistic_covariates name used metadata output correct.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0460","dir":"Changelog","previous_headings":"","what":"portalcasting 0.46.0","title":"portalcasting 0.46.0","text":"2023-01-24","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"articulating-dataset-controls-for-species-0-46-0","dir":"Changelog","previous_headings":"","what":"Articulating dataset controls for species","title":"portalcasting 0.46.0","text":"Changing dataset controls list input species listing species.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0450","dir":"Changelog","previous_headings":"","what":"portalcasting 0.45.0","title":"portalcasting 0.45.0","text":"2022-11-18","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"removing-dm_controls-as-a-separate-dataset-0-45-0","dir":"Changelog","previous_headings":"","what":"Removing dm_controls as a separate dataset","title":"portalcasting 0.45.0","text":"Following removal interp datasets Now model controls indicate species applied","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"new-models-0-45-0","dir":"Changelog","previous_headings":"","what":"New models","title":"portalcasting 0.45.0","text":"jags_logistic_competition jags_logistic_covariates jags_logistic_competition_covariates","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0440","dir":"Changelog","previous_headings":"","what":"portalcasting 0.44.0","title":"portalcasting 0.44.0","text":"2022-10-27","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"major-updates-to-jags-models-0-44-0","dir":"Changelog","previous_headings":"","what":"Major updates to JAGS models","title":"portalcasting 0.44.0","text":"Modeling tracking sigma tau (sd, precision) max caps density counts (aka removing guardrails) use + 0.1 - 0.1 logging, managing differently Chain increase 2 4, silent jags now FALSE Removal jags_SS wrapper, limited adaptation model","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"removing-jags-model-vignette-0-44-0","dir":"Changelog","previous_headings":"","what":"Removing JAGS model vignette","title":"portalcasting 0.44.0","text":"Removal jags_SS wrapper eliminates core vignette","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"adding-integrated-warm-precip-and-ndvi-covariates-0-44-0","dir":"Changelog","previous_headings":"","what":"Adding integrated warm precip and ndvi covariates","title":"portalcasting 0.44.0","text":"Allows covariates logistic model","code":""},{"path":[]},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0430","dir":"Changelog","previous_headings":"","what":"portalcasting 0.43.0","title":"portalcasting 0.43.0","text":"2022-05-31","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"trim-text-in-model-vignette-0-43-0","dir":"Changelog","previous_headings":"","what":"Trim text in model vignette","title":"portalcasting 0.43.0","text":"Vignette now pulls text model list, loops model list, rather raw text markdown doc. locates description place accessible content generation (e.g., portal forecast website)","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0420","dir":"Changelog","previous_headings":"","what":"portalcasting 0.42.0","title":"portalcasting 0.42.0","text":"2022-05-27","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"data-interpolation-moved-from-dataset-to-within-model-0-42-0","dir":"Changelog","previous_headings":"","what":"Data interpolation moved from “dataset” to “within model”","title":"portalcasting 0.42.0","text":"Patching, hit previous release","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0410","dir":"Changelog","previous_headings":"","what":"portalcasting 0.41.0","title":"portalcasting 0.41.0","text":"2022-05-26","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"data-interpolation-moved-from-dataset-to-within-model-0-41-0","dir":"Changelog","previous_headings":"","what":"Data interpolation moved from “dataset” to “within model”","title":"portalcasting 0.41.0","text":"Previously, datasets included, example all_interp. Now, exists models interpolate needed.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0400","dir":"Changelog","previous_headings":"","what":"portalcasting 0.40.0","title":"portalcasting 0.40.0","text":"2022-05-12","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"argument--nomenclature-updates-0-40-0","dir":"Changelog","previous_headings":"","what":"Argument / nomenclature updates","title":"portalcasting 0.40.0","text":"dfl arg x","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"read_rodents-default-settings-update-0-40-0","dir":"Changelog","previous_headings":"","what":"read_rodents default settings update","title":"portalcasting 0.40.0","text":"Now pulls datasets using prefab_datasets","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"subdirectory-internal-naming-changed-to-remove-spaces-0-40-0","dir":"Changelog","previous_headings":"","what":"Subdirectory internal naming changed to remove spaces","title":"portalcasting 0.40.0","text":"model fits now back fits model scripts back models","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"forecast_evaluations-file-now-saved-0-40-0","dir":"Changelog","previous_headings":"","what":"forecast_evaluations file now saved","title":"portalcasting 0.40.0","text":"Flattened version generated list evaluations Rather crude options saving overwriting whole file based settings file saving occurs single cast evaluated","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0390","dir":"Changelog","previous_headings":"","what":"portalcasting 0.39.0","title":"portalcasting 0.39.0","text":"2022-05-11","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"download_timeout-now-set-to-default-of-for-setup_production-0-39-0","dir":"Changelog","previous_headings":"","what":"download_timeout now set to default of 600 for setup_production","title":"portalcasting 0.39.0","text":"Allows download larger directory archive without timeout","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0380","dir":"Changelog","previous_headings":"","what":"portalcasting 0.38.0","title":"portalcasting 0.38.0","text":"2022-04-21","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"if-theres-only-one-model-dont-ensemble-0-38-0","dir":"Changelog","previous_headings":"","what":"If there’s only one model, don’t ensemble","title":"portalcasting 0.38.0","text":"Prevents warnings / errors","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0370","dir":"Changelog","previous_headings":"","what":"portalcasting 0.37.0","title":"portalcasting 0.37.0","text":"2022-04-21","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"building-out-evaluation-pipeline-0-37-0","dir":"Changelog","previous_headings":"","what":"Building out evaluation pipeline","title":"portalcasting 0.37.0","text":"starting already occurring, formalizing part evaluate_casts evaluate_cast pair functions evaluate_casts function now works automatically evaluate casts using evaluate_cast, generating error table used, nothing saved updated. errors, just noteworthy","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0360","dir":"Changelog","previous_headings":"","what":"portalcasting 0.36.0","title":"portalcasting 0.36.0","text":"2022-04-08","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"rodent_species-0-36-0","dir":"Changelog","previous_headings":"","what":"rodent_species","title":"portalcasting 0.36.0","text":"Now includes type argument abbreviation, Latin, table options most_abundant_species function, ’re using website.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0350","dir":"Changelog","previous_headings":"","what":"portalcasting 0.35.0","title":"portalcasting 0.35.0","text":"2022-04-07","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"updating-model-controls-0-35-0","dir":"Changelog","previous_headings":"","what":"Updating model controls","title":"portalcasting 0.35.0","text":"time response type link","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"developing-evaluate-functions-0-35-0","dir":"Changelog","previous_headings":"","what":"Developing evaluate functions","title":"portalcasting 0.35.0","text":"evaluate_casts evaluate_cast currently just placeholders","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0340","dir":"Changelog","previous_headings":"","what":"portalcasting 0.34.0","title":"portalcasting 0.34.0","text":"2022-04-07","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"removing-tmp-sub-0-34-0","dir":"Changelog","previous_headings":"","what":"Removing tmp sub","title":"portalcasting 0.34.0","text":"longer used, internal R code (e.g., tempdir) provides needed functionality Also removing clear_tmp","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0330","dir":"Changelog","previous_headings":"","what":"portalcasting 0.33.0","title":"portalcasting 0.33.0","text":"2022-04-07","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"setup_production-defaults-to-verbose--true-0-33-0","dir":"Changelog","previous_headings":"","what":"setup_production defaults to verbose = TRUE","title":"portalcasting 0.33.0","text":"Facilitates fuller log","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0320","dir":"Changelog","previous_headings":"","what":"portalcasting 0.32.0","title":"portalcasting 0.32.0","text":"2022-04-05","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"relocation-of-prefab-controls-0-32-0","dir":"Changelog","previous_headings":"","what":"Relocation of prefab controls","title":"portalcasting 0.32.0","text":"Moved source code scripts .yaml files inst/extdata read_ write_ functions rodent model controls lists","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"updating--rectifying-terminology-0-32-0","dir":"Changelog","previous_headings":"","what":"Updating / rectifying terminology","title":"portalcasting 0.32.0","text":"“data_set” -> “dataset”","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0310","dir":"Changelog","previous_headings":"","what":"portalcasting 0.31.0","title":"portalcasting 0.31.0","text":"2022-04-01","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0300","dir":"Changelog","previous_headings":"","what":"portalcasting 0.30.0","title":"portalcasting 0.30.0","text":"2022-04-01","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"settings-list-0-30-0","dir":"Changelog","previous_headings":"","what":"Settings list","title":"portalcasting 0.30.0","text":"setup_dir now takes settings argument list arguments directory_settings function now quickly cleanly collapses settings go setup_dir","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"generalized-functionality-for-models-and-rodent-data-sets-0-30-0","dir":"Changelog","previous_headings":"","what":"Generalized functionality for models and rodent data sets","title":"portalcasting 0.30.0","text":"Control lists now structured use .call","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"codebase-formatting-work-in-progress-0-30-0","dir":"Changelog","previous_headings":"","what":"Codebase formatting [work in progress]","title":"portalcasting 0.30.0","text":"longer concerned 80 char line limit Long argument lists, etc. now formatted quick top--bottom reading, via alignment ( =","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"removal-of-superfluous-_path-functions-0-30-0","dir":"Changelog","previous_headings":"","what":"Removal of superfluous _path functions","title":"portalcasting 0.30.0","text":"Use base R functions sufficient","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"arg_checks-removed-0-30-0","dir":"Changelog","previous_headings":"","what":"arg_checks removed","title":"portalcasting 0.30.0","text":"Internalized auto-checking relieves user need dictate checking","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"temporary-removal-of-adding-a-model-and-data-vignette-0-30-0","dir":"Changelog","previous_headings":"","what":"Temporary removal of “adding a model and data” vignette","title":"portalcasting 0.30.0","text":"Need update new API Also need add alt-text images","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0290","dir":"Changelog","previous_headings":"","what":"portalcasting 0.29.0","title":"portalcasting 0.29.0","text":"2022-03-30","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"patch-bline-bug-0-29-0","dir":"Changelog","previous_headings":"","what":"Patch bline bug","title":"portalcasting 0.29.0","text":"Argument needed removed still","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0280","dir":"Changelog","previous_headings":"","what":"portalcasting 0.28.0","title":"portalcasting 0.28.0","text":"2022-03-28","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"messageq-0-28-0","dir":"Changelog","previous_headings":"","what":"messageq","title":"portalcasting 0.28.0","text":"Function redesigned align message directly argument argument addition quiet argument. Now allows multiple message arguments via ... become pasted together","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"removal-of-specialized-message-functions-0-28-0","dir":"Changelog","previous_headings":"","what":"Removal of specialized message functions","title":"portalcasting 0.28.0","text":"Minimize unnecessary functions","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0270","dir":"Changelog","previous_headings":"","what":"portalcasting 0.27.0","title":"portalcasting 0.27.0","text":"2022-03-28","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"simplified-directory-creation-function-pipeline-0-27-0","dir":"Changelog","previous_headings":"","what":"Simplified directory creation function pipeline","title":"portalcasting 0.27.0","text":"Now just create_dir","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0260","dir":"Changelog","previous_headings":"","what":"portalcasting 0.26.0","title":"portalcasting 0.26.0","text":"2022-03-02","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"jags_logistic-model-added-0-26-0","dir":"Changelog","previous_headings":"","what":"jags_logistic model added","title":"portalcasting 0.26.0","text":"invoked jags_logistic like jags_RW, applied DM controls dataset. Building upon jags_RW model, jags_logistic expands upon “process model” underlying Poisson observations. four process parameters: mu (density species beginning time series) tau (precision (inverse variance) random walk, Gaussian log scale) starting value r (growth rate) K (carrying capacity) dynamic population. observation model additional parameters.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0254","dir":"Changelog","previous_headings":"","what":"portalcasting 0.25.4","title":"portalcasting 0.25.4","text":"2022-01-26","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0253","dir":"Changelog","previous_headings":"","what":"portalcasting 0.25.3","title":"portalcasting 0.25.3","text":"2022-01-26","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"further-removal-of-vestigial-redm-code-0-25-3","dir":"Changelog","previous_headings":"","what":"Further removal of vestigial rEDM code","title":"portalcasting 0.25.3","text":"Commenting needed prevent build breaks","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0252","dir":"Changelog","previous_headings":"","what":"portalcasting 0.25.2","title":"portalcasting 0.25.2","text":"2022-01-19","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0251","dir":"Changelog","previous_headings":"","what":"portalcasting 0.25.1","title":"portalcasting 0.25.1","text":"2021-12-08","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"getting-latest-version-of-portalr-0-25-1","dir":"Changelog","previous_headings":"","what":"Getting latest version of portalr","title":"portalcasting 0.25.1","text":"tagging update Docker image portalr 0.3.9","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0250","dir":"Changelog","previous_headings":"","what":"portalcasting 0.25.0","title":"portalcasting 0.25.0","text":"2021-11-30","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"tidying-for-joss-ms-0-25-0","dir":"Changelog","previous_headings":"","what":"Tidying for JOSS ms","title":"portalcasting 0.25.0","text":"adding source version args check args software context added ms overview added readme updating getting started vignette use production allow historical uses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0240","dir":"Changelog","previous_headings":"","what":"portalcasting 0.24.0","title":"portalcasting 0.24.0","text":"2021-11-11","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"speeding-downloading-0-24-0","dir":"Changelog","previous_headings":"","what":"Speeding downloading","title":"portalcasting 0.24.0","text":"Shift default downloading archive GitHub setup_dir download archive default, setup_production download function broken components – work still ongoing, now separate function portaldata portalpredictions climate forecasts addresses #132 #199","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0230","dir":"Changelog","previous_headings":"","what":"portalcasting 0.23.0","title":"portalcasting 0.23.0","text":"2021-11-10","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"patching-issue-with-ndvi-preparation-0-23-0","dir":"Changelog","previous_headings":"","what":"patching issue with ndvi preparation","title":"portalcasting 0.23.0","text":"ndvi data stream filling new content, resulting NAs latter half 2021 using forecast call fill missing values temporary patch","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0220","dir":"Changelog","previous_headings":"","what":"portalcasting 0.22.0","title":"portalcasting 0.22.0","text":"2021-11-09","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"removal-of-simplexedm-and-gpedm-0-22-0","dir":"Changelog","previous_headings":"","what":"Removal of simplexEDM and GPEDM","title":"portalcasting 0.22.0","text":"Previous versions used Hao’s fork rEDM packages, deprecated now breaks updates Rcpp Switching CRAN version Updating rEDM CRAN fix issue, models used prefab set Removed prefab control list removed documentation longer exported NAMESPACE","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"edit-tests-for-ensembling-and-figure-making-0-22-0","dir":"Changelog","previous_headings":"","what":"Edit tests for ensembling and figure making","title":"portalcasting 0.22.0","text":"edge case issues arose test fixed moons resolved edits test scripts without altering functions","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0214","dir":"Changelog","previous_headings":"","what":"portalcasting 0.21.4","title":"portalcasting 0.21.4","text":"2021-11-09","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0213","dir":"Changelog","previous_headings":"","what":"portalcasting 0.21.3","title":"portalcasting 0.21.3","text":"2021-09-17","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0212","dir":"Changelog","previous_headings":"","what":"portalcasting 0.21.2","title":"portalcasting 0.21.2","text":"Skipped","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"improving-github-actions-running-0-21-2","dir":"Changelog","previous_headings":"","what":"Improving GitHub Actions Running","title":"portalcasting 0.21.2","text":"Including running examples (needed explicitly stated); addressing 206 Use RStudio package manager speed running; addressing 206","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0211","dir":"Changelog","previous_headings":"","what":"portalcasting 0.21.1","title":"portalcasting 0.21.1","text":"2021-02-11","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0210","dir":"Changelog","previous_headings":"","what":"portalcasting 0.21.0","title":"portalcasting 0.21.0","text":"2021-02-10","code":""},{"path":[]},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0200","dir":"Changelog","previous_headings":"","what":"portalcasting 0.20.0","title":"portalcasting 0.20.0","text":"2021-02-04","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"addresses-issues-with-covariate-data-0-20-0","dir":"Changelog","previous_headings":"","what":"Addresses issues with covariate data","title":"portalcasting 0.20.0","text":"Missing data weather stations caused issues Now missing set data month covariates, saved covariate forecasts used","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"added-dm_controls-and-dm_controls_interp-to-prefab-data-sets-0-20-0","dir":"Changelog","previous_headings":"","what":"Added dm_controls and dm_controls_interp to prefab data sets","title":"portalcasting 0.20.0","text":"use basic single-species process models Note lowercase name! Using capitals actual name data set creation cause problems tolower gets used elsewhere!","code":""},{"path":[]},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0190","dir":"Changelog","previous_headings":"","what":"portalcasting 0.19.0","title":"portalcasting 0.19.0","text":"2020-10-28","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"patch-moons-0-19-0","dir":"Changelog","previous_headings":"","what":"Patch moons","title":"portalcasting 0.19.0","text":"Addressing issues updated dplyr","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0183","dir":"Changelog","previous_headings":"","what":"portalcasting 0.18.3","title":"portalcasting 0.18.3","text":"2020-01-23","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0182","dir":"Changelog","previous_headings":"","what":"portalcasting 0.18.2","title":"portalcasting 0.18.2","text":"2020-01-23","code":""},{"path":[]},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0181","dir":"Changelog","previous_headings":"","what":"portalcasting 0.18.1","title":"portalcasting 0.18.1","text":"2020-01-23","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0180","dir":"Changelog","previous_headings":"","what":"portalcasting 0.18.0","title":"portalcasting 0.18.0","text":"2020-01-23","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"bringing-the-dockerfile-over-from-portalpredictions-0-18-0","dir":"Changelog","previous_headings":"","what":"Bringing the Dockerfile over from portalPredictions","title":"portalcasting 0.18.0","text":"building ","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0171","dir":"Changelog","previous_headings":"","what":"portalcasting 0.17.1","title":"portalcasting 0.17.1","text":"2020-01-16","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"addition-of-gpedm-model-and-function-0-17-1","dir":"Changelog","previous_headings":"","what":"Addition of GPEDM (model and function)","title":"portalcasting 0.17.1","text":"Gaussian processes using Empirical Dynamic Modeling Actually (0.17.0 snag)","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0170","dir":"Changelog","previous_headings":"","what":"portalcasting 0.17.0","title":"portalcasting 0.17.0","text":"2020-01-15","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"addition-of-gpedm-model-and-function-0-17-0","dir":"Changelog","previous_headings":"","what":"Addition of GPEDM (model and function)","title":"portalcasting 0.17.0","text":"Gaussian processes using Empirical Dynamic Modeling","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0160","dir":"Changelog","previous_headings":"","what":"portalcasting 0.16.0","title":"portalcasting 0.16.0","text":"2020-01-10","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"change-in-format-for-saving-out-model_fits-and-model_casts-0-16-0","dir":"Changelog","previous_headings":"","what":"Change in format for saving out model_fits and model_casts","title":"portalcasting 0.16.0","text":"Saving model_fits model_casts serialized .json files now instead .rData files reliable generalized. Also added functions reading (read_model_casts read_model_fits). addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0152","dir":"Changelog","previous_headings":"","what":"portalcasting 0.15.2","title":"portalcasting 0.15.2","text":"2019-12-18","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"using-github-version-of-portalr-0-15-2","dir":"Changelog","previous_headings":"","what":"Using github version of portalr","title":"portalcasting 0.15.2","text":"Due backwards incompatible changes portalr CRAN yet","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0151","dir":"Changelog","previous_headings":"","what":"portalcasting 0.15.1","title":"portalcasting 0.15.1","text":"2019-12-18","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"trivial-updating-0-15-1","dir":"Changelog","previous_headings":"","what":"Trivial updating","title":"portalcasting 0.15.1","text":"address Zenodo hiccup","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0150","dir":"Changelog","previous_headings":"","what":"portalcasting 0.15.0","title":"portalcasting 0.15.0","text":"2019-10-31","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"jags-vignette-0-15-0","dir":"Changelog","previous_headings":"","what":"JAGS vignette","title":"portalcasting 0.15.0","text":"Added vignette describes use JAGS/runjags API within portalcasting. addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"pulls-code-for-matchcalldefaults-into-the-package-0-15-0","dir":"Changelog","previous_headings":"","what":"Pulls code for match.call.defaults into the package","title":"portalcasting 0.15.0","text":"Use DesignLibrary causes problematic dependency chain docker image building","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"patch-bug-in-most_abundant_species-0-15-0","dir":"Changelog","previous_headings":"","what":"Patch bug in most_abundant_species","title":"portalcasting 0.15.0","text":"Wasn’t using species name function, pulling traps column, causing break plotting.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0140","dir":"Changelog","previous_headings":"","what":"portalcasting 0.14.0","title":"portalcasting 0.14.0","text":"2019-10-24","code":""},{"path":[]},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0130","dir":"Changelog","previous_headings":"","what":"portalcasting 0.13.0","title":"portalcasting 0.13.0","text":"2019-10-12","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"full-writing-of-control_files-in-model-scripts-0-13-0","dir":"Changelog","previous_headings":"","what":"Full writing of control_files in model scripts","title":"portalcasting 0.13.0","text":"Previously, controls list files model scripts taken environment script run, opens script everything, undesirable. need include control list runjags models forced explicit writing list inputs, code available transfer files control list. mean function calls scripts now super long explicit, ’s ok. avoid super long model script lines (event default inputs repeated list functions), function control_list_arg made generalize coded runjags list use also files control list. function writes script component includes arguments list function different formal definition.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0121","dir":"Changelog","previous_headings":"","what":"portalcasting 0.12.1","title":"portalcasting 0.12.1","text":"2019-10-12","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"fixes-to-the-pkgdown-site-0-12-1","dir":"Changelog","previous_headings":"","what":"Fixes to the pkgdown site","title":"portalcasting 0.12.1","text":"rmarkdown v1.16.0 issues rendering images, forcing use v1.16.1 now. Inclusion new functions reference list.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0120","dir":"Changelog","previous_headings":"","what":"portalcasting 0.12.0","title":"portalcasting 0.12.0","text":"2019-10-11","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcast-updates-model-scripts-according-to-controls_model-0-12-0","dir":"Changelog","previous_headings":"","what":"portalcast updates model scripts according to controls_model","title":"portalcasting 0.12.0","text":"Previously, changed controls prefab model, manually re-write models using fill_models running portalcast. Using fill_models result hand-made scripts overwritten, specific function (update_models) updating models created. update_models default updates models listed controls_model input, avoid overwriting model scripts. change behavior also update prefab models’ scripts, set update_prefab_models = TRUE. particularly handy changing global (respect model scripts) argument: main, quiet, verbose, arg_checks. addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"messaging-around-trying-to-use-not-complete-directory-improved-0-12-0","dir":"Changelog","previous_headings":"","what":"Messaging around trying to use not-complete directory improved","title":"portalcasting 0.12.0","text":"Indication now made component directory missing suggestion made run create_dir. addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"patching-data-set-bug-in-plotting-0-12-0","dir":"Changelog","previous_headings":"","what":"Patching data set bug in plotting","title":"portalcasting 0.12.0","text":"bug matching interpolated non interpolated data sets within ensembling, fixed. addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"updated-messaging-0-12-0","dir":"Changelog","previous_headings":"","what":"Updated messaging","title":"portalcasting 0.12.0","text":"Moved messaging tidied functions.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"changed-behavior-of-prep_rodents_table-and-prep_rodents-0-12-0","dir":"Changelog","previous_headings":"","what":"Changed behavior of prep_rodents_table and prep_rodents","title":"portalcasting 0.12.0","text":"Now start_moon argument, data prior end_moon returned. aligns rodents prep functions (moons, covariates) prep functions. Facilitates use data prior start_moon forecasting models (e.g., distributions starting state variables). Requires model functions now explicitly trim rodents table used. added prefab models.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"fixed-codecov-targets-0-12-0","dir":"Changelog","previous_headings":"","what":"Fixed codecov targets","title":"portalcasting 0.12.0","text":"Previous targets restrictively high due earlier near-perfect coverage. codecov.yml file now included repo (ignored R build) sets target arbitrarily still-quite-high---restrictively-95%. can changed needed future.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"simple-edm-model-added-0-12-0","dir":"Changelog","previous_headings":"","what":"Simple EDM model added","title":"portalcasting 0.12.0","text":"addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"jags-infrastructure-added-0-12-0","dir":"Changelog","previous_headings":"","what":"JAGS infrastructure added","title":"portalcasting 0.12.0","text":"Using runjags package, extensive access API run.jags via control_runjags list (see runjags_control). Currently place simple random walk model. addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"prepared-rodents-table-includes-more-content-0-12-0","dir":"Changelog","previous_headings":"","what":"Prepared rodents table includes more content","title":"portalcasting 0.12.0","text":"Expanded back time start. Added effort columns (default options prefab_rodents_controls effort = TRUE).","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"updated-adding-a-model-and-data-vignette-0-12-0","dir":"Changelog","previous_headings":"","what":"Updated adding a model and data vignette","title":"portalcasting 0.12.0","text":"Added section end just extending existing models new data sets. addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0110","dir":"Changelog","previous_headings":"","what":"portalcasting 0.11.0","title":"portalcasting 0.11.0","text":"2019-09-14","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"ensembling-reintroduced-0-11-0","dir":"Changelog","previous_headings":"","what":"Ensembling reintroduced","title":"portalcasting 0.11.0","text":"Associated reconfiguration portalcasting v0.8.1 0.9.0, ensembling removed temporarily. basic ensemble reintroduced, now unweighted average across selected models, allowing us ensemble tied AIC weighting (AIC weighting longer possible split interpolated non-interpolated data model fitting). major departure v0.8.1 earlier, ensemble’s output saved like actual models’. Rather, calculated needed fly. plotting, now default use ensemble plot_cast_ts plot_cast_point ensemble included plot_casts_err_lead plot_casts_cov_RMSE.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"return-of-most_abundant_species-0-11-0","dir":"Changelog","previous_headings":"","what":"Return of most_abundant_species","title":"portalcasting 0.11.0","text":"Function used select common species. Now uses actual data casts determine species.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0100","dir":"Changelog","previous_headings":"","what":"portalcasting 0.10.0","title":"portalcasting 0.10.0","text":"2019-09-13","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"model-evaluation-and-ensembling-added-back-in-0-10-0","dir":"Changelog","previous_headings":"","what":"Model evaluation and ensembling added back in","title":"portalcasting 0.10.0","text":"removed updated version 0.8.1 0.9.0 allow time develop code new infrastructure. Model evaluation happens within cast tab output .","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"temporarily-removed-figures-returned-0-10-0","dir":"Changelog","previous_headings":"","what":"Temporarily removed figures returned","title":"portalcasting 0.10.0","text":"Associated evaluation. Plotting error function lead time multiple species multiple models. Now fall-back arrangement works single species-model combination. Plotting RMSE coverage within species-model combinations.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"flexing-model-controls-to-allow-user-defined-lists-for-prefab-models-0-10-0","dir":"Changelog","previous_headings":"","what":"Flexing model controls to allow user-defined lists for prefab models","title":"portalcasting 0.10.0","text":"sandboxing existing models, useful able change parameter model’s controls, data sets. Previously, require lot hacking around. Now, ’s simple inputting desired controls flipping arg_checks = FALSE.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-090","dir":"Changelog","previous_headings":"","what":"portalcasting 0.9.0","title":"portalcasting 0.9.0","text":"2019-09-06","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"major-api-update-increase-in-explicit-top-level-arguments-0-9-0","dir":"Changelog","previous_headings":"","what":"Major API update: increase in explicit top-level arguments","title":"portalcasting 0.9.0","text":"Moved key arguments focal top-level inputs, rather nested within control options list. Allows full control, default settings working cleanly. addresses Restructuring controls lists, retained usage situations necessary: model construction, data set construction, file naming, climate data downloading. Openness new setup functions, particular setup_sandbox. addresses Simplification model naming inputs. Just put names need, use model_names functions need (usually coding inside functions setting default argument levels). addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"directory-tree-structure-simplified-0-9-0","dir":"Changelog","previous_headings":"","what":"Directory tree structure simplified","title":"portalcasting 0.9.0","text":"dirtree removed base (function concept) removed. make structure use main = \"./name\". “PortalData” removed sub replaced “raw”, includes raw versions files (post unzipping) downloaded: Portal Data Portal Predictions covariate forecasts (whose saving also new ).","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"tightened-messaging-0-9-0","dir":"Changelog","previous_headings":"","what":"Tightened messaging","title":"portalcasting 0.9.0","text":"Expanded use quiet verbose connected throughout pipeline. Additional messaging functions reduce code clutter. Formatting messages reduce clutter highlight outline structure.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"download-capacity-generalized-0-9-0","dir":"Changelog","previous_headings":"","what":"Download capacity generalized","title":"portalcasting 0.9.0","text":"Flexible interface downloading capacity url, generalized flexible functions generating Zenodo API urls (retrieving raw data historical predictions) NMME API urls (retrieving weather forecasts) port download function. addresses addresses addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"changes-for-users-adding-their-own-models-to-the-prefab-set-0-9-0","dir":"Changelog","previous_headings":"","what":"Changes for users adding their own models to the prefab set","title":"portalcasting 0.9.0","text":"Substantial reduction effort users wish add models (.e. anyone sandboxing). can even just plunk R script (single line calling external program desired) without add model script writing controls, just add name model models argument portalcast run everything else. Outlined updated Getting Started Adding Model/Data vignettes. Users adding models prefab suite now permanently add model’s control options source code model_script_controls rather write control functions. Users adding models prefab suite permanently add model’s function code prefab_models script (reusing adding documentation prefab_model_functions), rather script. Users still add model’s name source code model_names.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"relaxed-model-requirements-0-9-0","dir":"Changelog","previous_headings":"","what":"Relaxed model requirements","title":"portalcasting 0.9.0","text":"Models longer forced use interpolated data. Models longer required output rigidly formatted data-table. Presently, requirement just list, soon specifications added improve reliability. Outlined updated Adding Model/Data vignette.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"more-organization-via-metadata-0-9-0","dir":"Changelog","previous_headings":"","what":"More organization via metadata","title":"portalcasting 0.9.0","text":"Generalized cast output now tracked using unique id file name associated cast, related row metadata table, newly included . addresses addresses addresses Additional control information (like data set setup) sent model metadata saved . Directory setting configuration information now tracked dir_config.yaml file, pulled save information used create, setup, run particular casts.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"changes-for-users-interested-in-analyzing-their-own-data-sets-not-in-the-standard-data-set-configuration-0-9-0","dir":"Changelog","previous_headings":"","what":"Changes for users interested in analyzing their own data sets not in the standard data set configuration","title":"portalcasting 0.9.0","text":"Users now able define rodent observation data sets part standard data set (“” “controls”, also interpolation missing data) giving name data_sets argument controls defining data set (used portalr’s summarize_rodent_data function) controls_rodents argument. order actualize , user need flip argument checking (default sandbox setting, using standard production setting, set arg_checks = FALSE relevant function). Users interested permanently adding treatment level available data sets add source code rodents_controls function, just like models. addresses Internal code points pipeline files named via data set inputs. data files pointed using control_files (see file_controls) input list, allows general flexibility respect files pipeline reading data subdirectory.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"split-of-standard-data-sets-0-9-0","dir":"Changelog","previous_headings":"","what":"Split of standard data sets","title":"portalcasting 0.9.0","text":"prefab controls default interpolated models use AIC model comparison ensemble building. forced models use interpolated data. Starting version, models required fit fashion (due generalization comparison post-processing code), interpolation required needed, split data standard interpolated versions.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"application-of-specific-models-to-specific-data-sets-now-facilitated-0-9-0","dir":"Changelog","previous_headings":"","what":"Application of specific models to specific data sets now facilitated","title":"portalcasting 0.9.0","text":"write_model model_template data_sets argument used write code , replacing hard code requirement analyzing “” “controls” every model. Now, users wish analyze particular data component can easily add analysis pipeline.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"generalization-of-code-terms-0-9-0","dir":"Changelog","previous_headings":"","what":"Generalization of code terms","title":"portalcasting 0.9.0","text":"Throughout codebase, terminology generalized “fcast”/“forecast”/“hindcast” “cast” except clear distinction needed (primarily due covariate values used come ). Nice benefits: highlights commonality two (see next section) reduces code volume. start_newmoon now start_moon like end_moon addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"hindcasting-becomes-more-similar-to-forecasting-0-9-0","dir":"Changelog","previous_headings":"","what":"“Hindcasting” becomes more similar to “forecasting”","title":"portalcasting 0.9.0","text":"codebase now, “hindcasting” functionally “forecasting” forecast origin (end_moon) recently occurring moon. Indeed, “hindcast” nearly entirely removed codebase “forecast” nearly exclusively retained documentation (barely code ), functionally replaced generalized (shorter) “cast”. cast_type retained metadata file posterity, functionality generally checked considering end_moon last_moon combination, end_moon forecast origin last_moon recent Rather complex machinery used iterate multiple forecasts (“hindcasting”) involved working backwards skipping certain moons (didn’t need skipped anymore due updated code back allows us forecast fine even without recent samples yet), simple loop able manage iterating. also facilitated downloading raw portalPredictions repository Zenodo critically retention “raw” subdirectory, allows quick re-calculation historic predictions covariates. addresses cast_type removed input, ’s auto determined now based end_moon last moon available (’re equal ’s “forecast”, ’s “hindcast”).","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"softer-handling-of-model-failure-0-9-0","dir":"Changelog","previous_headings":"","what":"Softer handling of model failure","title":"portalcasting 0.9.0","text":"Within cast, model scripts now sourced within -loop (rather sapply) allow simple error catching script. addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"improved-argument-checking-flow-0-9-0","dir":"Changelog","previous_headings":"","what":"Improved argument checking flow","title":"portalcasting 0.9.0","text":"Arg checking now considerably tighter, code-wise. argument either recognized given set attributes (internally defined list) unrecognized stated user ’s checked (help notify anyone building code ’s new argument). argument’s attributes define logical checking flow series pretty simple options. also now arg_checks logical argument goes check_args turn underlying code, enabling user go production restrictions otherwise errors, even though might technically work hood.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"substantial-re-writes-of-the-vignettes-0-9-0","dir":"Changelog","previous_headings":"","what":"Substantial re-writes of the vignettes","title":"portalcasting 0.9.0","text":"Done general update present version codebase. Broke adding model data vignette “working locally” “adding pipeline”, also added checklists screen shots. addresses Reorganized getting started vignette order makes sense. addresses","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"additional-things-0-9-0","dir":"Changelog","previous_headings":"","what":"Additional things","title":"portalcasting 0.9.0","text":"drop_spp now changed species (focus inclusion, exclusion). addresses Improved examples, also now \\donttest{}. addresses Tightened testing skip_on_cran used judiciously. addresses longer building AIC-based ensemble. addresses Default confidence limit now standard 0.95.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-081","dir":"Changelog","previous_headings":"","what":"portalcasting 0.8.1","title":"portalcasting 0.8.1","text":"2019-07-11","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"hookup-with-zenodo-0-8-1","dir":"Changelog","previous_headings":"","what":"Hookup with Zenodo","title":"portalcasting 0.8.1","text":"Inclusion json file minor editing documentation, functional coding changes","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-080","dir":"Changelog","previous_headings":"","what":"portalcasting 0.8.0","title":"portalcasting 0.8.0","text":"2019-03-21","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"plot_cov_rmse_mod_spp-now-only-plots-the-most-recent--cast-by-default-0-8-0","dir":"Changelog","previous_headings":"","what":"plot_cov_RMSE_mod_spp now only plots the most recent -cast by default","title":"portalcasting 0.8.0","text":"cast_dates = NULL (default), plot uses recent -cast avoid swamping current -casts historic -casts.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"added-specific-checks-for-no-casts-returned-in-plot-functions-0-8-0","dir":"Changelog","previous_headings":"","what":"Added specific checks for no casts returned in plot functions","title":"portalcasting 0.8.0","text":"’s bit leeway respect argument validity, particular around model names (facilitate users making new models new names, don’t want hardwire naming scheme check_arg), now checks see tables returned select_casts rows .","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"handling-the-edge-cases-in-model-function-testing-0-8-0","dir":"Changelog","previous_headings":"","what":"Handling the edge cases in model function testing","title":"portalcasting 0.8.0","text":"trimming data sets model function testing (happens AutoArima test script) now includes addition dummy values edge cases (0 observations nearly--0 observations), allows better coverage testing -GARCH model functions particular.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"fixing-a-typo-bug-within-pevgarch-0-8-0","dir":"Changelog","previous_headings":"","what":"Fixing a typo bug within pevGARCH","title":"portalcasting 0.8.0","text":"mismatch fcast forecast one edge cases.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-070","dir":"Changelog","previous_headings":"","what":"portalcasting 0.7.0","title":"portalcasting 0.7.0","text":"2019-03-21","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"addressing-nbgarch-and-nbsgarch-when-even-the-poisson-fallback-fails-0-7-0","dir":"Changelog","previous_headings":"","what":"Addressing nbGARCH and nbsGARCH when even the Poisson fallback fails","title":"portalcasting 0.7.0","text":"nbGARCH extended nbsGARCH, models fall back Poisson distribution negative binomial fit fails. Previously (nbGARCH) Poisson fit always succeeded back-ups, now (nbsGARCH) sometimes isn’t case (predictor model complex) even Poisson fit can fail. now models, fit fails, follow occurs pevGARCH use fcast0 forecast 0s arbitrarily high AIC (1e6).","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-060","dir":"Changelog","previous_headings":"","what":"portalcasting 0.6.0","title":"portalcasting 0.6.0","text":"2019-03-20","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"addressing-covariate-forecasts-in-pevgarch-under-hindcasting-0-6-0","dir":"Changelog","previous_headings":"","what":"Addressing covariate forecasts in pevGARCH under hindcasting","title":"portalcasting 0.6.0","text":"pevGARCH() set leverage covariate_forecasts file. ’s now set toggle based cast_type metadata list (replaced formerly named filename_suffix element) load covariate_forecasts file (using new read_covariate_forecasts function) select specific hindcast based source date_made columns selected new elements metadata list (covariate_source covariate_date_made).","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-050","dir":"Changelog","previous_headings":"","what":"portalcasting 0.5.0","title":"portalcasting 0.5.0","text":"2019-03-19","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"adding-nbsgarch-0-5-0","dir":"Changelog","previous_headings":"","what":"Adding nbsGARCH","title":"portalcasting 0.5.0","text":"Model nbsGARCH added base set models.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"foy-function-0-5-0","dir":"Changelog","previous_headings":"","what":"foy function","title":"portalcasting 0.5.0","text":"foy() calculates fraction year given date set dates.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-041","dir":"Changelog","previous_headings":"","what":"portalcasting 0.4.1","title":"portalcasting 0.4.1","text":"2019-03-19","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"move-to-usage-of-cran-portalr-0-4-1","dir":"Changelog","previous_headings":"","what":"Move to usage of CRAN portalr","title":"portalcasting 0.4.1","text":"aid stability, ’re now using CRAN release portalr","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"model_scripts-function-0-4-1","dir":"Changelog","previous_headings":"","what":"model_scripts function","title":"portalcasting 0.4.1","text":"Provides simple way list scripts models subdirectory.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"including-the-package-version-message-in-setup_dir-and-portalcast-0-4-1","dir":"Changelog","previous_headings":"","what":"Including the package version message in setup_dir and portalcast","title":"portalcasting 0.4.1","text":"Including simple message report version portalcasting loaded top level functions.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"vignette-updates-0-4-1","dir":"Changelog","previous_headings":"","what":"Vignette updates","title":"portalcasting 0.4.1","text":"Adding plot (pre-constructed images) -vignette.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"patching-a-bug-in-model_template-0-4-1","dir":"Changelog","previous_headings":"","what":"Patching a bug in model_template","title":"portalcasting 0.4.1","text":"lingering old name argument switch causing model templates written \"\" argument model model name input save_forecast_output.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-040","dir":"Changelog","previous_headings":"","what":"portalcasting 0.4.0","title":"portalcasting 0.4.0","text":"2019-03-16","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"tidied-functionality-for-checking-function-arguments-0-4-0","dir":"Changelog","previous_headings":"","what":"Tidied functionality for checking function arguments","title":"portalcasting 0.4.0","text":"Introduction check_args check_arg collaborate check validity function arguments using standardized set requirements based argument names, thereby helping unify standardize use codebase’s arguments.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"updated-function-names-0-4-0","dir":"Changelog","previous_headings":"","what":"Updated function names","title":"portalcasting 0.4.0","text":"prep_rodents now prep_rodents_list rodents_data now prep_rodents update_rodents now update_rodents_list read_data split read_all, read_controls, read_covariates, read_moons, read_metadata model_path now model_paths sub_path sub_paths merged sub_paths, returns specific_subs NULL lag_data now lag_covariates","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"updated-argument-names-to-leverage-check_args-etc-0-4-0","dir":"Changelog","previous_headings":"","what":"Updated argument (names to leverage check_args, etc.)","title":"portalcasting 0.4.0","text":"multiple functions data replaced rodents specific. CI_level now subsumed confidence_level name now subsumed model set split species_set model_set order arguments model_names now back model_set, add. default subs_type subdirs now \"portalcasting\". four model functions reduced set inputs leverage directory tree, script generation updated match. Updating cast argument cast_to_check cast_is_valid removing verbose argument verify_cast allow check_arg leverage check_arg verify_cast.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"removal-of-classes-0-4-0","dir":"Changelog","previous_headings":"","what":"Removal of classes","title":"portalcasting 0.4.0","text":"models class removed. subdirs class removed.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"messageq-function-0-4-0","dir":"Changelog","previous_headings":"","what":"messageq function","title":"portalcasting 0.4.0","text":"messageq function added tidy code around messages printed based quiet arguments.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"inclusion-of-wensemble-as-an-option-in-model_names-0-4-0","dir":"Changelog","previous_headings":"","what":"Inclusion of \"wEnsemble\" as an option in model_names","title":"portalcasting 0.4.0","text":"Produces prefab list \"Ensemble\" entry added, allow simply without using NULL options, collects model names. facilitated addition models argument evaluations plots.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-031","dir":"Changelog","previous_headings":"","what":"portalcasting 0.3.1","title":"portalcasting 0.3.1","text":"2019-03-12","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"bug-fix-in-plot_cast_ts-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fix in plot_cast_ts()","title":"portalcasting 0.3.1","text":"plot_cast_ts cleanly plot time series observations made start prediction window. function set now split observations occurred prediction window , execute plot didn’t exist, add top. Functionality now added allow toggling points via add_obs input (defaults TRUE).","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-030","dir":"Changelog","previous_headings":"","what":"portalcasting 0.3.0","title":"portalcasting 0.3.0","text":"2019-03-04","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"completed-migration-of-plotting-code-0-3-0","dir":"Changelog","previous_headings":"","what":"Completed migration of plotting code","title":"portalcasting 0.3.0","text":"plot_cast now plot_cast_ts now fully vetted tested plotcastts_ylab plotcastts_xaxis provide tidied functions producing y label x axis (respectively) plot_cast_ts. plot_cast_point now added replace plot_species_forecast. plotcastpoint_yaxis provides tidied functionality y axis plot_cast_point. select_most_ab_spp allows simple selection abundant species -cast. plot_err_lead_spp_mods plot_cov_RMSE_mod_spp now added replace raw code evaluation page.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"processing-of-forecasts-0-3-0","dir":"Changelog","previous_headings":"","what":"Processing of forecasts","title":"portalcasting 0.3.0","text":"read_casts (old) now read_cast specifically works one -cast. read_casts (new) reads multiple -casts. select_cast now select_casts allows flexible selection default. make_ensemble now returns set predictions non-NA bounds one model included (returns model ensemble). most_recent_cast returns date recent -cast. Can dependent presence census. verify_cast cast_is_valid replace forecast_is_valid repo codebase. verify_cast logical wrapper cast_is_valid facilitates pipeline integration. cast_is_valid major set checks cast data frame. append_observed_to_cast provided add observed data forecasts add columns raw error, -forecast-window, lead time well. measure_cast_error allows summarization errors -cast level.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"processing-of-data-0-3-0","dir":"Changelog","previous_headings":"","what":"Processing of data","title":"portalcasting 0.3.0","text":"most_recent_census returns date recent census.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"portalcasting 0.3.0","text":"Argument order models reversed (add set) defaults general now NULL NULL, set = \"prefab\" within options functions, make easy run novel model set. Argument order subdirs reversed (subs type) defaults general now NULL NULL, type = \"portalcasting\" within options functions dirtree make easier manage single subdirectory. fdate argument replaced throughout cast_date generality.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"utilities-0-3-0","dir":"Changelog","previous_headings":"","what":"Utilities","title":"portalcasting 0.3.0","text":"na_conformer provides tidy functionality converting non-character NA entries (can get read data due \"NA\" species) \"NA\". Works vectors data frames.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-022","dir":"Changelog","previous_headings":"","what":"portalcasting 0.2.2","title":"portalcasting 0.2.2","text":"2019-02-12","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"beginning-to-migrate-plotting-code-0-2-2","dir":"Changelog","previous_headings":"","what":"Beginning to migrate plotting code","title":"portalcasting 0.2.2","text":"plot_cast developed yet fully vetted tested, integrated main repository. replace forecast_viz main plotting function.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"added-moons-to-read_data-0-2-2","dir":"Changelog","previous_headings":"","what":"Added \"moons\" to read_data","title":"portalcasting 0.2.2","text":"read_data’s options expanded include \"moons\". fully implemented everywhere, now available.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"bug-fix-in-interpolate_data-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug fix in interpolate_data","title":"portalcasting 0.2.2","text":"interpolate_data using rodent_spp way assumed \"NA\" species coded \"NA.\", wasn’t. Expansion rodent_spp include nadot logical argument, default value FALSE.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-021","dir":"Changelog","previous_headings":"","what":"portalcasting 0.2.1","title":"portalcasting 0.2.1","text":"2019-02-12","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"bug-fix-in-read_data-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fix in read_data","title":"portalcasting 0.2.1","text":"read_data reading rodents file Controls well, caused forecasts Controls duplicated forecasts. Simple correction .","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-020","dir":"Changelog","previous_headings":"","what":"portalcasting 0.2.0","title":"portalcasting 0.2.0","text":"2019-02-04","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"code-testing-0-2-0","dir":"Changelog","previous_headings":"","what":"Code testing","title":"portalcasting 0.2.0","text":"code now tested via testthat. Test coverage tracked via Codecov. functionality covered testing Codecov associated download_predictions(), intermittently hangs Travis. Testing available, requires manual toggling test_location value \"local\" relevant test scripts (02-directory 12-prepare_predictions).","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"enforcement-of-inputs-0-2-0","dir":"Changelog","previous_headings":"","what":"Enforcement of inputs","title":"portalcasting 0.2.0","text":"functions previously checks input argument classes, sizes, etc. Now functions specifically check argument’s value validity throw specific errors.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"documentation-0-2-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"portalcasting 0.2.0","text":"functions fleshed documentation specify argument requirements, link externally, include information.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"data-classes-0-2-0","dir":"Changelog","previous_headings":"","what":"Data classes","title":"portalcasting 0.2.0","text":"smooth checking different data structures, now define data objects classes addition existing (data.frame list) definitions. rodents, rodents_list, covariates, metadata, moons classes presently specified methods functions.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"options-list-classes-0-2-0","dir":"Changelog","previous_headings":"","what":"Options list classes","title":"portalcasting 0.2.0","text":"smooth checking different list structures, now define options list objects classes addition existing list definitions. all_options, dir_options, PortalData_options, data_options, moons_options, rodents_options, covariates_options, metadata_options, predictions_options, models_options, cast_options classes created function name. classes presently specified methods functions operate .","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"added-functions-0-2-0","dir":"Changelog","previous_headings":"","what":"Added functions","title":"portalcasting 0.2.0","text":"classy() allows easy application classes objects %>% pipeline read_data() provides simple interface loading applying classes model-ready data files. remove_incompletes() removes incomplete entries table, defined NA specific column. check_options_args() provides tidy way check input arguments (wrt class, length, numeric limitations, etc.) options functions.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"vignettes-0-2-0","dir":"Changelog","previous_headings":"","what":"Vignettes","title":"portalcasting 0.2.0","text":"current models vignette brought forecasting website. codebase vignette created earlier README.md file. adding model vignette constructed based two pages Portal Predictions repository wiki (1 2) substantial additional text added.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"retention-of-all-forecasts-of-covariates-0-2-0","dir":"Changelog","previous_headings":"","what":"Retention of all forecasts of covariates","title":"portalcasting 0.2.0","text":"Previous versions retained one covariate forecast per newmoon. now enable retention multiple covariate forecasts per newmoon tag forecast date time stamp well.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"website-0-2-0","dir":"Changelog","previous_headings":"","what":"Website","title":"portalcasting 0.2.0","text":"Added website driven pkgdown.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"changelog-0-2-0","dir":"Changelog","previous_headings":"","what":"Changelog","title":"portalcasting 0.2.0","text":"Developed changelog part package.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"support-documents-0-2-0","dir":"Changelog","previous_headings":"","what":"Support documents","title":"portalcasting 0.2.0","text":"Added code conduct contribution guidelines repository.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-011","dir":"Changelog","previous_headings":"","what":"portalcasting 0.1.1","title":"portalcasting 0.1.1","text":"2019-01-13","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"addressing-portal-data-download-0-1-1","dir":"Changelog","previous_headings":"","what":"Addressing Portal Data download","title":"portalcasting 0.1.1","text":"Setting default back Zenodo link via updated portalr function. Updated fill_PortalData() new PortalData_options() allow control download source.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-010","dir":"Changelog","previous_headings":"","what":"portalcasting 0.1.0","title":"portalcasting 0.1.0","text":"true code edits 2018-12-14, version number updated 2019-01-02","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"migration-from-portal-predictions-repository-0-1-0","dir":"Changelog","previous_headings":"","what":"Migration from Portal Predictions repository","title":"portalcasting 0.1.0","text":"Code brought forecasting repository housed package. Multiple updates codebase included, intentionally just “hood”, meaning little change output simplification input. major motivation also facilitate model development, requires able set local version repository play might consider “sandbox”. allow someone develop test new forecasting models space isn’t forecasting repo (clone fork), truly novel location. point, sandbox setup isn’t fully robust within package, rather requires additional steps (documented).","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"development-of-code-pipeline-0-1-0","dir":"Changelog","previous_headings":"","what":"Development of code pipeline","title":"portalcasting 0.1.0","text":"previous implementation R codebase driving forecasting (housed within portalPredictions repo) mix functions loose code hard-coded repo. package implementation generalizes functionality organizes code set hierarchical functions drive creation use code within repo elsewhere. See codebase vignette details.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"explicit-directory-tree-0-1-0","dir":"Changelog","previous_headings":"","what":"Explicit directory tree","title":"portalcasting 0.1.0","text":"facilitate portability package (necessity smooth sandboxing development new models), now include explicit, controllable definition forecasting directory tree. See codebase vignette details.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"introduction-of-options-lists-0-1-0","dir":"Changelog","previous_headings":"","what":"Introduction of options lists","title":"portalcasting 0.1.0","text":"facilitate simple control via defaults argument inputs flexibility changes inputs throughout code hierarchy, include set functions default options aspects codebase. See codebase vignette details.","code":""},{"path":"https://weecology.github.io/portalcasting/news/index.html","id":"portalcasting-0001","dir":"Changelog","previous_headings":"","what":"portalcasting 0.0.0.1","title":"portalcasting 0.0.0.1","text":"2018-11-06 last iteration code now exists portalcasting previous home within portalPredictions repo. referred name portalcasting time.","code":""}]
