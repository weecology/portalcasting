name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    # branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_USERNAME: henrykironde


jobs:
  
  R-CMD-check:
    # Copy of the R-CMD-check workflow to make sure that build passes before pushing container on new tag
    runs-on: ubuntu-20.04
    env:
      R_DEFAULT_INTERNET_TIMEOUT: 300
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CRAN_REPO: https://packagemanager.rstudio.com/all/__linux__/focal/latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1
      
      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install texlive-latex-base libharfbuzz-dev libfribidi-dev
          sudo apt-get install gsl-bin libgsl0-dev
          sudo apt-get install libcurl4-openssl-dev
          sudo apt-get install jags
      - name: Install package dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"), repos = c("CRAN" = Sys.getenv("CRAN_REPO")))
          remotes::install_deps(dependencies = TRUE, repos = c("CRAN" = Sys.getenv("CRAN_REPO")))
        shell: Rscript {0}
      - name: Check
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

  build-docker-image:
    needs: R-CMD-check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        #if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: weecology/portalcasting
          tag-custom: latest
          tag-semver: |
            {{raw}}   

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }} 
#           tags: weecology/portalcasting:latest
          labels: ${{ steps.meta.outputs.labels }}
          file: docker/Dockerfile
